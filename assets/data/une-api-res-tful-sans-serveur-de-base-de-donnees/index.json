{"hash":"250f333e9ef0347f8247956a19dfdff7c411a751","data":{"post":{"title":"Une API RESTful sans serveur de base de données","date":"14 March 2016","content":"<p>Créer une API RESTful en PHP c'est tout à fait possible. Pour cela on utilise traditionnellement une base de donnée en SQL comme MySQL ou MariaDB ou en NoSQL avec MongoDB, Redis... Mais utiliser les données directement dans un fichier JSON est également possible. En partant du principe que les données sont stockées dans un tableau, il est tout à fait possible de manipuler ce dernier par la suite.</p>\n<p><img src=\"https://media.giphy.com/media/8FNlmNPDTo2wE/giphy.gif\"></p>\n<p>Ci-dessous, le contenu du fichier \"db.json\".</p>\n<div class=\"gridsome-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Interstellar\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"releaseYear\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">2014</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"The Revenant\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"releaseYear\"</span><span class=\"token operator\">:</span> <span class=\"token number\">2016</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Snowpiercer\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"releaseYear\"</span><span class=\"token operator\">:</span> <span class=\"token number\">2013</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"The Host\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"releaseYear\"</span><span class=\"token operator\">:</span> <span class=\"token number\">2006</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Sicario\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"releaseYear\"</span><span class=\"token operator\">:</span> <span class=\"token number\">2015</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Coté serveur, on va mettre en place un design pattern (\"patron de conception\") de type singleton. Concrètement, on instancie l'ouverture du fichier JSON dans le constructeur de notre classe. On évite ainsi de l'appeler dans les 4 fonctions destinées au CRUD (Create Read, Update, Delete) :</p>\n<ul>\n<li><code class=\"language-text\">FetchAll</code> : récupère toutes les lignes sous forme d'un tableau ;</li>\n<li><code class=\"language-text\">FetchOne</code> : récupère une ligne en particulier ;</li>\n<li><code class=\"language-text\">Create</code> : créé une nouvelle ligne ;</li>\n<li><code class=\"language-text\">Update</code> : modifie une ligne en fonction de l'id ;</li>\n<li><code class=\"language-text\">Delete</code> : supprime une ligne en fonction de l'id.</li>\n</ul>\n<h2>Préparation de la classe</h2>\n<div class=\"gridsome-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Api</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$file_json</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'db.json'</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// Ouverture du fichier</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">json</span> <span class=\"token operator\">=</span> <span class=\"token function\">file_get_contents</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">file_json</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// Tableau des données en PHP</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">get</span>  <span class=\"token operator\">=</span> <span class=\"token function\">json_decode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">json</span><span class=\"token punctuation\">,</span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// Affichage des messages / données JSON</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">function</span> <span class=\"token function\">Display</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n       <span class=\"token keyword\">echo</span> <span class=\"token function\">json_encode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">JSON_UNESCAPED_UNICODE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// Modification du fichier JSON</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">function</span> <span class=\"token function\">Set</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">file_put_contents</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">file_json</span><span class=\"token punctuation\">,</span> <span class=\"token function\">json_encode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// Id du tableau PHP</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">function</span> <span class=\"token function\">CurrentRow</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$id</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$id</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// Nos futures fonctions destinées au CRUD</span>\n<span class=\"token punctuation\">}</span></span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Dans le constructeur, on instancie 2 variables :</p>\n<ul>\n<li><code class=\"language-text\">$this-&gt;json</code> : ouverture du fichier JSON avec <code class=\"language-text\">file_get_contents()</code> ;</li>\n<li><code class=\"language-text\">$this-&gt;get</code> : décode le JSON avec <code class=\"language-text\">json_decode()</code> sous la forme d'un tableau.</li>\n</ul>\n<p>Puis on prépare 2 fonctions privées :</p>\n<ul>\n<li><code class=\"language-text\">Display()</code> afficher des messages / données au format JSON avec <code class=\"language-text\">json_encode()</code> ;</li>\n<li><code class=\"language-text\">Set()</code> modifier le fichier JSON avec <code class=\"language-text\">file_put_contents()</code> ;</li>\n<li><code class=\"language-text\">CurrentRow()</code> l'id du tableau PHP (et non JSON) qui commence à partir de 0 (et non 1).</li>\n</ul>\n<h3>Toutes les données</h3>\n<div class=\"gridsome-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token comment\">// Lecture de tous le tableau JSON</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">FetchAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">get</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$row</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// Récupération du tableau de données</span>\n        <span class=\"token variable\">$rows</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$row</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">Display</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$rows</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Dans la première fonction publique <code class=\"language-text\">FetchAll()</code>, on récupère toutes les données présentes dans le fichier JSON que l'on affiche sous la forme d'un tableau.</p>\n<h3>Une seule ligne</h3>\n<div class=\"gridsome-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token comment\">// Lecture d'une ligne à partir de son \"id\"</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">FetchOne</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$id</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Récupération du tableau de données</span>\n    <span class=\"token variable\">$data</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">get</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Vérification de l'existence de la ligne</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">CurrentRow</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$id</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">Display</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">CurrentRow</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$id</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">Display</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"error\"</span> <span class=\"token operator\">=></span> <span class=\"token string double-quoted-string\">\"the row #<span class=\"token interpolation\"><span class=\"token variable\">$id</span></span> doesn't exists\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">header</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"HTTP/1.0 404 Not Found\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Avec comme paramètre dans la fonction <code class=\"language-text\">FetchOne()</code>, l'id d'une ligne, on récupère la ligne correspondante. Si elle n'existe pas, on affiche un message d'erreur.</p>\n<h3>Création d'une ligne</h3>\n<div class=\"gridsome-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token comment\">// Création d'une nouvelle ligne</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">Create</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data_input</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">empty</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data_input</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// Récupération du tableau de données</span>\n        <span class=\"token variable\">$data</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">get</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// Ajout d'un nouveau champ id</span>\n        <span class=\"token variable\">$id</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'id'</span> <span class=\"token operator\">=></span> <span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// Fusion des données dans cette nouvelle ligne</span>\n        <span class=\"token variable\">$row</span> <span class=\"token operator\">=</span> <span class=\"token function\">array_merge</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$id</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$datas_input</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// Ajout de la nouvelle ligne dans le tableau général</span>\n        <span class=\"token variable\">$all_data</span> <span class=\"token operator\">=</span> <span class=\"token function\">array_merge</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$row</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// Modification du fichier JSON</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">Set</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$all_data</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// Message de succès</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">Display</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"success\"</span> <span class=\"token operator\">=></span><span class=\"token string double-quoted-string\">\"posted new row \"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"data\"</span> <span class=\"token operator\">=></span> <span class=\"token variable\">$row</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">header</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"HTTP/1.0 201 Created\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Dans la fonction <code class=\"language-text\">Create()</code>, on passe en paramètre les données à ajouter sous forme d'un tableau. Dans un premier temps, on récupère toutes les données présentes dans le fichier JSON. On adjoint dans ce tableau une nouvelle ligne dans laquelle on fusionne les données ajoutées en paramètre avec un nouvel id. Puis on sauvegarde ce nouveau tableau avec <code class=\"language-text\">$this-&gt;Set()</code>.</p>\n<h3>Modification d'une ligne</h3>\n<div class=\"gridsome-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token comment\">// Modification d'une ligne</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">Update</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$id</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$data_input</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Récupération du tableau de données</span>\n    <span class=\"token variable\">$data</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">get</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Vérification de l'existence de la ligne</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">CurrentRow</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$id</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// MAJ de la ligne concernée</span>\n        <span class=\"token variable\">$update</span> <span class=\"token operator\">=</span> <span class=\"token function\">array_merge</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'id'</span> <span class=\"token operator\">=></span> <span class=\"token variable\">$id</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$data_input</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// Vérification de modification</span>\n        <span class=\"token variable\">$diff</span>   <span class=\"token operator\">=</span> <span class=\"token function\">array_diff</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$update</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">CurrentRow</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$id</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">empty</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$diff</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">Display</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"warning\"</span> <span class=\"token operator\">=></span> <span class=\"token string double-quoted-string\">\"no change\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// Remplacement de la ligne</span>\n            <span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">CurrentRow</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$id</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$update</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">// Modification du fichier JSON</span>\n            <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">Set</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">Display</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"success\"</span> <span class=\"token operator\">=></span> <span class=\"token string double-quoted-string\">\"row updated\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"data\"</span> <span class=\"token operator\">=></span> <span class=\"token variable\">$update</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">Display</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"error\"</span> <span class=\"token operator\">=></span> <span class=\"token string double-quoted-string\">\"the row #<span class=\"token interpolation\"><span class=\"token variable\">$id</span></span> doesn't exists\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">header</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"HTTP/1.0 404 Not Found\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Pour modifier une ligne, dans la fonction <code class=\"language-text\">Update()</code> on récupère toutes les données du fichier JSON. On vérifie que la ligne concernée existe. Puis comme pour créer une nouvelle ligne, on fusionne avec l'id, les données à modifier spécifiées en paramètre. On en profite également pour vérifier que ces dernières sont bien différentes que celles déja existantes. Si c'est le cas, alors on met à jour le fichier JSON avec la ligne modifiée.</p>\n<h3>Suppression d'une ligne</h3>\n<div class=\"gridsome-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token comment\">// Suppression d'une ligne</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">Delete</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$id</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Récupération du tableau de données</span>\n    <span class=\"token variable\">$data</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">get</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Vérification de l'existence de la ligne</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">CurrentRow</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$id</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// Suppression de la ligne concernée dans le tableau</span>\n        <span class=\"token keyword\">unset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">CurrentRow</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$id</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// Modification du fichier JSON</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">Set</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">Display</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"success\"</span> <span class=\"token operator\">=></span> <span class=\"token string double-quoted-string\">\"row #<span class=\"token interpolation\"><span class=\"token variable\">$id</span></span> deleted\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">Display</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"error\"</span> <span class=\"token operator\">=></span> <span class=\"token string double-quoted-string\">\"the row #<span class=\"token interpolation\"><span class=\"token variable\">$id</span></span> doesn't exists\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">header</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"HTTP/1.0 404 Not Found\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Pour supprimer une ligne, dans la fonction <code class=\"language-text\">Delete()</code> on récupère toutes les données du tableau. On vérifie que la ligne existe bien pour la supprimer et modifier le fichier JSON avec le tableau modifié.</p>\n<h2>Test</h2>\n<p>Dans le même fichier, après la fermeture de la classe, on appel cette dernière dans une variable.</p>\n<div class=\"gridsome-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token function\">header</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'Content-Type: application/json; charset=utf-8'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Appel de la classe \"Api\"</span>\n<span class=\"token variable\">$api</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Api</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Puis, on peut afficher toutes les données.</p>\n<div class=\"gridsome-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token variable\">$api</span><span class=\"token operator\">-></span><span class=\"token function\">FetchAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>Afficher uniquement la ligne ayant l'id 4.</p>\n<div class=\"gridsome-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token variable\">$api</span><span class=\"token operator\">-></span><span class=\"token function\">FetchOne</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>Créer une nouvelle ligne.</p>\n<div class=\"gridsome-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token variable\">$api</span><span class=\"token operator\">-></span><span class=\"token function\">Create</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'title'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'Prisonners'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'releaseYear'</span> <span class=\"token operator\">=></span> <span class=\"token number\">2012</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>Modifier la ligne ayant l'id 6.</p>\n<div class=\"gridsome-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token variable\">$api</span><span class=\"token operator\">-></span><span class=\"token function\">Update</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'title'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'Prisoners'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'releaseYear'</span> <span class=\"token operator\">=></span> <span class=\"token number\">2013</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>Supprimer la ligne ayant l'id 6.</p>\n<div class=\"gridsome-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token variable\">$api</span><span class=\"token operator\">-></span><span class=\"token function\">Delete</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<h2>Refactoring</h2>\n<p>Dans notre classe, on met en place 2 fonctions privées pour alléger nos 3 dernières fonctions publiques :</p>\n<ul>\n<li><code class=\"language-text\">CheckFound()</code> : vérifier que la ligne existe ;</li>\n<li><code class=\"language-text\">CheckData()</code> : verifier qu'il y a bien des données fournies en paramètre.</li>\n</ul>\n<h3>Gestion des erreurs 404</h3>\n<div class=\"gridsome-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token comment\">// Vérification de l'existence de la ligne</span>\n<span class=\"token keyword\">private</span> <span class=\"token keyword\">function</span> <span class=\"token function\">CheckFound</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$id</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Récupération du tableau de données</span>\n    <span class=\"token variable\">$data</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">get</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">CurrentRow</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$id</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">Display</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"error\"</span> <span class=\"token operator\">=></span> <span class=\"token string double-quoted-string\">\"the row #<span class=\"token interpolation\"><span class=\"token variable\">$id</span></span> doesn't exists\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">header</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"HTTP/1.0 404 Not Found\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Si la ligne n'existe pas, on affiche une erreur de type 404.</p>\n<h3>Gestion des données manquantes</h3>\n<div class=\"gridsome-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token keyword\">private</span> <span class=\"token keyword\">function</span> <span class=\"token function\">CheckData</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data_input</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">empty</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data_input</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">Display</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"error\"</span> <span class=\"token operator\">=></span> <span class=\"token string double-quoted-string\">\"missing data\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">header</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"HTTP/1.0 400 Bad Request\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Si le paramètre <code class=\"language-text\">$data_input</code> est vide, on affiche une erreur de type 400.</p>\n<h3>Réécritures des fonctions CRUD concernées</h3>\n<p>On peut ainsi réécrire les fonctions <code class=\"language-text\">FetchOne()</code>, <code class=\"language-text\">Create()</code>, <code class=\"language-text\">Update()</code> et <code class=\"language-text\">Delete()</code>.</p>\n<div class=\"gridsome-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token comment\">// Lecture d'une ligne à partir de son \"id\"</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">FetchOne</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$id</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">CheckFound</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$id</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// Récupération du tableau de données</span>\n        <span class=\"token variable\">$data</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">get</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">Display</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">CurrentRow</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$id</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Création d'une nouvelle ligne</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">Create</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data_input</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">CheckData</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data_input</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// Récupération du tableau de données</span>\n        <span class=\"token variable\">$data</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">get</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// Ajout d'un nouveau champ id</span>\n        <span class=\"token variable\">$id</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'id'</span> <span class=\"token operator\">=></span> <span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// Fusion des données dans cette nouvelle ligne</span>\n        <span class=\"token variable\">$row</span> <span class=\"token operator\">=</span> <span class=\"token function\">array_merge</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$id</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$data_input</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// Ajout de la nouvelle ligne dans le tableau général</span>\n        <span class=\"token variable\">$all_data</span> <span class=\"token operator\">=</span> <span class=\"token function\">array_merge</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$row</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// Modification du fichier JSON</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">Set</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$all_data</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// Message de succès</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">Display</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"success\"</span> <span class=\"token operator\">=></span> <span class=\"token string double-quoted-string\">\"posted new row \"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"data\"</span> <span class=\"token operator\">=></span> <span class=\"token variable\">$row</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">header</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"HTTP/1.0 201 Created\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Modification d'une ligne</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">Update</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$id</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$data_input</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Vérification de l'existence de la ligne</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">CheckFound</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$id</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">CheckData</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data_input</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// Récupération du tableau de données</span>\n        <span class=\"token variable\">$data</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">get</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// MAJ de la ligne concernée</span>\n        <span class=\"token variable\">$update</span> <span class=\"token operator\">=</span> <span class=\"token function\">array_merge</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'id'</span> <span class=\"token operator\">=></span> <span class=\"token variable\">$id</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$data_input</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// Vérification de modification</span>\n        <span class=\"token variable\">$diff</span>   <span class=\"token operator\">=</span> <span class=\"token function\">array_diff</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$update</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">CurrentRow</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$id</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">empty</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$diff</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">Display</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"warning\"</span> <span class=\"token operator\">=></span> <span class=\"token string double-quoted-string\">\"no change\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// Remplacement de la ligne</span>\n            <span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">CurrentRow</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$id</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$update</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">// Modification du fichier JSON</span>\n            <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">Set</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">Display</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"success\"</span> <span class=\"token operator\">=></span> <span class=\"token string double-quoted-string\">\"row updated\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"data\"</span> <span class=\"token operator\">=></span> <span class=\"token variable\">$update</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Suppression d'une ligne</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">Delete</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$id</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Vérification de l'existence de la ligne</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">CheckFound</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$id</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// Récupération du tableau de données</span>\n        <span class=\"token variable\">$data</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">get</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// Suppression de la ligne concernée dans le tableau</span>\n        <span class=\"token keyword\">unset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">CurrentRow</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$id</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// Modification du fichier JSON</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">Set</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">Display</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"success\"</span> <span class=\"token operator\">=></span> <span class=\"token string double-quoted-string\">\"row #<span class=\"token interpolation\"><span class=\"token variable\">$id</span></span> deleted\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>Conclusion</h2>\n<p>Avec des conditions, des boucles et des fonctions natives de manipulation de tableau, il est finalement simple de mettre en place une classe pour manipuler une API en JSON sans serveur de base de données derière. D'autant plus qu'il est possible par la suite, d'imaginer la mise en place dans cette même classe d'un contrôle sur la structure de l'API (type de champ, champ obligatoire, unicité d'un champ, etc...).</p>\n","download":"","tags":[{"title":"PHP","path":"/tag/PHP/"},{"title":"API","path":"/tag/API/"}],"timeToRead":7,"parts":[]}},"context":{}}