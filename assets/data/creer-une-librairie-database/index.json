{"hash":"321f72ea5ea99330a789cb374431474c20a110a9","data":{"post":{"title":"Créer une librairie \"Database\"","date":"23 November 2015","content":"<p>On va concevoir une librairie en POO (Programmation Orienté Objet) pour pouvoir se connecter à la base de données avec PDO (PHP Data Objects). En plus de concevoir cette librairie, on va également créer un modèle contenant des requêtes SQL de type CRUD (Create Read Update Delete). Vous pourrez par la suite, réutiliser cette librairie dans un \"microframework\" PHP tel que Slim, Silex ou Lumen et ainsi profiter du modèle MVC.</p>\n<h2>Préparation</h2>\n<p>Pour faire ce tutoriel, il nous faut pour commencer, une base de donnée MySQL / MariaDB.</p>\n<div class=\"gridsome-highlight\" data-language=\"sql\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-sql line-numbers\"><code class=\"language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">DATABASE</span> <span class=\"token keyword\">IF</span> <span class=\"token operator\">NOT</span> <span class=\"token keyword\">EXISTS</span> test<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> <span class=\"token keyword\">IF</span> <span class=\"token operator\">NOT</span> <span class=\"token keyword\">EXISTS</span> <span class=\"token punctuation\">`</span>users<span class=\"token punctuation\">`</span> <span class=\"token punctuation\">(</span>\n  <span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">11</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">AUTO_INCREMENT</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">`</span>name<span class=\"token punctuation\">`</span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">COLLATE</span> utf8_unicode_ci <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span> <span class=\"token keyword\">ENGINE</span><span class=\"token operator\">=</span><span class=\"token keyword\">InnoDB</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token keyword\">CHARSET</span><span class=\"token operator\">=</span>utf8 <span class=\"token keyword\">COLLATE</span><span class=\"token operator\">=</span>utf8_unicode_ci<span class=\"token punctuation\">;</span>\n\n\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token punctuation\">`</span>users<span class=\"token punctuation\">`</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">`</span>name<span class=\"token punctuation\">`</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">VALUES</span>\n<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Macon'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Kalia'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Damian'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Nash'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Keefe'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Octavius'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Wendy'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Maggy'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">(</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Walter'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Cherokee'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>Classe \"Database\"</h2>\n<p>Créez un fichier \"Database.php\" dans le dossier \"config\".</p>\n<div class=\"gridsome-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> <span class=\"token comment\">// config/Database.php</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Database</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Code à venir</span>\n<span class=\"token punctuation\">}</span></span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Cette classe va contenir la connexion à PDO puis différents types de requêtes SQL possibles en PDO.</p>\n<h3>Connexion à PDO</h3>\n<p>Pour se connecter à notre serveur via PDO, on a besoin des 5 informations obligatoires ci-dessous.</p>\n<ul>\n<li>Le nom de la base ;</li>\n<li>Le nom utilisateur (\"root\" par défaut) ;</li>\n<li>Le mot de passe ;</li>\n<li>L'adresse du serveur ;</li>\n<li>Le port du serveur (\"3306\" par défaut).</li>\n</ul>\n<p>On créé donc ces 5 variables instanciées dans le constructeur de notre classe.</p>\n<div class=\"gridsome-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> <span class=\"token comment\">// config/Database.php</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Database</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$pdo</span> <span class=\"token operator\">=</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">db_name</span> <span class=\"token operator\">=</span> <span class=\"token double-quoted-string string\">\"test\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">db_user</span> <span class=\"token operator\">=</span> <span class=\"token double-quoted-string string\">\"root\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">db_pass</span> <span class=\"token operator\">=</span> <span class=\"token double-quoted-string string\">\"\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">db_host</span> <span class=\"token operator\">=</span> <span class=\"token double-quoted-string string\">\"localhost\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">db_port</span> <span class=\"token operator\">=</span> <span class=\"token number\">3306</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// Autres fonctions à venir</span>\n<span class=\"token punctuation\">}</span></span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Maintenant que l'on a ces données, on va pouvoir créer notre fonction de connexion PDO, que l'on nomme <code class=\"language-text\">getPDO()</code>.</p>\n<div class=\"gridsome-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> <span class=\"token comment\">// config/Database.php</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Database</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$pdo</span> <span class=\"token operator\">=</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">db_name</span> <span class=\"token operator\">=</span> <span class=\"token double-quoted-string string\">\"test\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">db_user</span> <span class=\"token operator\">=</span> <span class=\"token double-quoted-string string\">\"root\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">db_pass</span> <span class=\"token operator\">=</span> <span class=\"token double-quoted-string string\">\"\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">db_host</span> <span class=\"token operator\">=</span> <span class=\"token double-quoted-string string\">\"localhost\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">db_port</span> <span class=\"token operator\">=</span> <span class=\"token number\">3306</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// Connexion à la BDD</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getPDO</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">pdo</span> <span class=\"token operator\">===</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token comment\">// DSN</span>\n                <span class=\"token variable\">$pdo</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PDO</span><span class=\"token punctuation\">(</span><span class=\"token double-quoted-string string\">\"mysql:dbname=\"</span> <span class=\"token punctuation\">.</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">db_name</span> <span class=\"token punctuation\">.</span> <span class=\"token double-quoted-string string\">\";host=\"</span> <span class=\"token punctuation\">.</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">db_host</span> <span class=\"token punctuation\">.</span> <span class=\"token double-quoted-string string\">\";port=\"</span><span class=\"token punctuation\">.</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">db_port</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">db_user</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">db_pass</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token variable\">$pdo</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token constant\">PDO</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token constant\">ATTR_ERRMODE</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">PDO</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token constant\">ERRMODE_EXCEPTION</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token variable\">$pdo</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">exec</span><span class=\"token punctuation\">(</span><span class=\"token double-quoted-string string\">\"SET CHARACTER SET utf8\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">pdo</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$pdo</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>PDOException <span class=\"token variable\">$e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">echo</span> <span class=\"token single-quoted-string string\">'Pas de connexion avec la BDD : '</span> <span class=\"token punctuation\">.</span> <span class=\"token variable\">$e</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">pdo</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Avec <code class=\"language-text\">PDO::setAttribute</code>, on configure 2 attributs PDO :</p>\n<ul>\n<li><code class=\"language-text\">PDO::ATTR_ERRMODE</code> : affiche les rapports d'erreur ;</li>\n<li><code class=\"language-text\">PDO::ERRMODE_EXCEPTION</code> : émet une exception pour les erreurs.</li>\n</ul>\n<p>Désormais, la connexion établie, on va pouvoir gérer 3 types de requêtes SQL dans 3 fonctions distinctes :</p>\n<ul>\n<li>Simple (\"query\") ;</li>\n<li>Préparéé (\"prepare\") ;</li>\n<li>Une seule ligne (\"row\").</li>\n</ul>\n<h3>Requête simple</h3>\n<div class=\"gridsome-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token comment\">// Requête simple</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">query</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$statement</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token variable\">$req</span>  <span class=\"token operator\">=</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getPDO</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">query</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$statement</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$data</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$req</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">fetchAll</span><span class=\"token punctuation\">(</span><span class=\"token constant\">PDO</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token constant\">FETCH_OBJ</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Avec <code class=\"language-text\">PDOStatement::fetchAll</code>, on renvoi tous les résultat sous la forme d'un tableau d'objet de type \"stdClass\" avec les noms de propriétés qui correspondent aux noms des colonnes retournés dans le jeu de résultats via <code class=\"language-text\">PDO::FETCH_OBJ</code>. Exemple avec notre table :</p>\n<div class=\"gridsome-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token keyword\">Array</span> <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> stdClass Object <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token number\">1</span> <span class=\"token punctuation\">[</span>name<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> Macon <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> stdClass Object <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token number\">2</span> <span class=\"token punctuation\">[</span>name<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> Kalia <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> stdClass Object <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token number\">3</span> <span class=\"token punctuation\">[</span>name<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> Damian <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> stdClass Object <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token number\">4</span> <span class=\"token punctuation\">[</span>name<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> Nash <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> stdClass Object <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token number\">5</span> <span class=\"token punctuation\">[</span>name<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> Keefe <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> stdClass Object <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token number\">6</span> <span class=\"token punctuation\">[</span>name<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> Octavius <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> stdClass Object <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token number\">7</span> <span class=\"token punctuation\">[</span>name<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> Wendy <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> stdClass Object <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token number\">8</span> <span class=\"token punctuation\">[</span>name<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> Maggy <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> stdClass Object <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token number\">9</span> <span class=\"token punctuation\">[</span>name<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> Walter <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> stdClass Object <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token number\">10</span> <span class=\"token punctuation\">[</span>name<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> Cherokee <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>Si vous voulez un tableau de type \"array\", remplacez <code class=\"language-text\">PDO::FETCH_OBJ</code> par <code class=\"language-text\">PDO::FETCH_ASSOC</code>. Ce qui donne avec nos données :</p>\n<div class=\"gridsome-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token keyword\">Array</span> <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token keyword\">Array</span> <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token number\">1</span> <span class=\"token punctuation\">[</span>name<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> Macon <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token keyword\">Array</span> <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token number\">2</span> <span class=\"token punctuation\">[</span>name<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> Kalia <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token keyword\">Array</span> <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token number\">3</span> <span class=\"token punctuation\">[</span>name<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> Damian <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token keyword\">Array</span> <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token number\">4</span> <span class=\"token punctuation\">[</span>name<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> Nash <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token keyword\">Array</span> <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token number\">5</span> <span class=\"token punctuation\">[</span>name<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> Keefe <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token keyword\">Array</span> <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token number\">6</span> <span class=\"token punctuation\">[</span>name<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> Octavius <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token keyword\">Array</span> <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token number\">7</span> <span class=\"token punctuation\">[</span>name<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> Wendy <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token keyword\">Array</span> <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token number\">8</span> <span class=\"token punctuation\">[</span>name<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> Maggy <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token keyword\">Array</span> <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token number\">9</span> <span class=\"token punctuation\">[</span>name<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> Walter <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token keyword\">Array</span> <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token number\">10</span> <span class=\"token punctuation\">[</span>name<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> Cherokee <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<h3>Requête préparée</h3>\n<div class=\"gridsome-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token comment\">// Requête préparée</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">prepare</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$statement</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$attributes</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token variable\">$query</span>  <span class=\"token operator\">=</span> <span class=\"token function\">explode</span><span class=\"token punctuation\">(</span><span class=\"token double-quoted-string string\">\" \"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$statement</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Récupération du 1èr mot</span>\n    <span class=\"token variable\">$option</span> <span class=\"token operator\">=</span> <span class=\"token function\">strtolower</span><span class=\"token punctuation\">(</span><span class=\"token function\">array_shift</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$query</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token variable\">$req</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getPDO</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">prepare</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$statement</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$req</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$attributes</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$option</span> <span class=\"token operator\">==</span> <span class=\"token double-quoted-string string\">\"select\"</span> <span class=\"token operator\">||</span> <span class=\"token variable\">$option</span> <span class=\"token operator\">==</span> <span class=\"token double-quoted-string string\">\"show\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$req</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">rowCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token variable\">$data</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$req</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">fetchAll</span><span class=\"token punctuation\">(</span><span class=\"token constant\">PDO</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token constant\">FETCH_CLASS</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">elseif</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$option</span> <span class=\"token operator\">==</span> <span class=\"token double-quoted-string string\">\"insert\"</span> <span class=\"token operator\">||</span> <span class=\"token variable\">$option</span> <span class=\"token operator\">==</span> <span class=\"token double-quoted-string string\">\"update\"</span> <span class=\"token operator\">||</span> <span class=\"token variable\">$option</span> <span class=\"token operator\">==</span> <span class=\"token double-quoted-string string\">\"delete\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$option</span> <span class=\"token operator\">==</span> <span class=\"token double-quoted-string string\">\"insert\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// Valeur id inséré</span>\n            <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getPDO</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">lastInsertId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token variable\">$req</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">rowCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Si c'est une requête de type <code class=\"language-text\">SELECT</code> ou <code class=\"language-text\">SHOW</code>, on affiche tous les objets. Si elle est du type <code class=\"language-text\">INSERT</code>, on retourne l'id retourné via <code class=\"language-text\">lastInsertId()</code>. Sinon pour celles du type <code class=\"language-text\">UPDATE</code> ou <code class=\"language-text\">DELETE</code>, on affiche le résultat sous formes d'un entier via <code class=\"language-text\">PDOStatement::rowCount</code> (0 = contenu non modifié, X = nombre de contenu modifié(s)).</p>\n<h3>Une seule ligne</h3>\n<div class=\"gridsome-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token comment\">// Une seule ligne</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">row</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$statement</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$attributes</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token variable\">$req</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getPDO</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">prepare</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$statement</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$req</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$attributes</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$data</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$req</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token constant\">PDO</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token constant\">FETCH_ASSOC</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Avec <code class=\"language-text\">fetch</code>, on retourne une seule ligne sous la forme d'un tableau indexé par le nom de la colonne comme retourné dans le jeu de résultats. Dans notre cas pour la 1ère ligne de notre table.</p>\n<div class=\"gridsome-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token keyword\">Array</span> <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token number\">1</span> <span class=\"token punctuation\">[</span>name<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> Macon <span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<h2>Le modèle</h2>\n<p>Créez une nouveau fichier \"Users.php\" dans le dossier \"models\" dont la classe \"Users\" est héritée de la classe \"Database\".</p>\n<div class=\"gridsome-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> <span class=\"token comment\">// models/Users.php</span>\n\n<span class=\"token keyword\">require_once</span> <span class=\"token double-quoted-string string\">\"./config/Database.php\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Users</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Database</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$table</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$db</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$table</span> <span class=\"token operator\">=</span> <span class=\"token double-quoted-string string\">\"users\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">table</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$table</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">db</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Database</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// Ici la suite du code</span>\n<span class=\"token punctuation\">}</span></span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>On ajoute à la suite, les 4 requètes CRUD (Create Read Update Delete) génériques.</p>\n<h3>Sélectionner tous les éléments</h3>\n<div class=\"gridsome-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token comment\">// Sélectionner tous les éléments</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">findAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">db</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">query</span><span class=\"token punctuation\">(</span><span class=\"token double-quoted-string string\">\"SELECT id, name\n                                FROM <span class=\"token interpolation\"><span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">table</span></span>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>On utilise \"query\" car ce n'est pas une requète spécifique.</p>\n<h3>Sélectionner un élément par son id</h3>\n<div class=\"gridsome-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token comment\">// Sélectionner un élément par son id</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$id</span> <span class=\"token operator\">=</span> <span class=\"token double-quoted-string string\">\"\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$id</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">db</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">row</span><span class=\"token punctuation\">(</span><span class=\"token double-quoted-string string\">\"SELECT id, name\n                                FROM <span class=\"token interpolation\"><span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">table</span></span>\n                                WHERE id = :id\n                                LIMIT 1\"</span><span class=\"token punctuation\">,</span>\n                                <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token double-quoted-string string\">\"id\"</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token variable\">$id</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>On utilise \"row\" car on attend une seule ligne.</p>\n<h3>Ajouter un élément</h3>\n<div class=\"gridsome-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token comment\">// Ajouter un élément</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$name</span> <span class=\"token operator\">=</span> <span class=\"token double-quoted-string string\">\"\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$name</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">db</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">prepare</span><span class=\"token punctuation\">(</span><span class=\"token double-quoted-string string\">\"INSERT INTO <span class=\"token interpolation\"><span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">table</span></span> (name)\n                                    VALUES (:name)\"</span><span class=\"token punctuation\">,</span>\n                                    <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token double-quoted-string string\">\"name\"</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token variable\">$name</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>On utilise \"prepare\" car on spécifie la valeur du champ \"name\".</p>\n<h3>Modifier un élément</h3>\n<div class=\"gridsome-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token comment\">// Modifier un élément</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">edit</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$name</span> <span class=\"token operator\">=</span> <span class=\"token double-quoted-string string\">\"\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$id</span> <span class=\"token operator\">=</span> <span class=\"token double-quoted-string string\">\"\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$name</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token variable\">$id</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">db</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">prepare</span><span class=\"token punctuation\">(</span><span class=\"token double-quoted-string string\">\"UPDATE <span class=\"token interpolation\"><span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">table</span></span>\n                                    SET name = :name\n                                    WHERE id = :id\"</span><span class=\"token punctuation\">,</span>\n                                    <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token double-quoted-string string\">\"name\"</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token variable\">$name</span><span class=\"token punctuation\">,</span> <span class=\"token double-quoted-string string\">\"id\"</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token variable\">$id</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>On utilise \"prepare\" car on spécifie la valeur du champ \"name\" et de l'id.</p>\n<h3>Supprimer un élément</h3>\n<div class=\"gridsome-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token comment\">// Supprimer un élément</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">delete</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$id</span> <span class=\"token operator\">=</span> <span class=\"token double-quoted-string string\">\"\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$id</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">db</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">prepare</span><span class=\"token punctuation\">(</span><span class=\"token double-quoted-string string\">\"DELETE FROM <span class=\"token interpolation\"><span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">table</span></span>\n                                    WHERE id=:id\"</span><span class=\"token punctuation\">,</span>\n                                    <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token double-quoted-string string\">\"id\"</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token variable\">$id</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>On utilise \"prepare\" car on spécifie la valeur du champ \"id\".</p>\n<h2>Tester</h2>\n<p>Depuis un fichier \"index.php\", on charge le fichier du modèle \"Users\" avec <code class=\"language-text\">require_once</code> pour pouvoir l'instancier dans une variable avec <code class=\"language-text\">new Nom_de_ma_classe()</code>.</p>\n<div class=\"gridsome-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token function\">header</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'Content-Type: text/html; charset=UTF-8'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">require_once</span> <span class=\"token double-quoted-string string\">\"models/Users.php\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$users</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Users</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>De cette façon, on peut exécuter nos requêtes écrites dans notre modèle \"Users\".</p>\n<div class=\"gridsome-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token function\">header</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'Content-Type: text/html; charset=UTF-8'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">require_once</span> <span class=\"token double-quoted-string string\">\"models/Users.php\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$users</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Users</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">print_r</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$users</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">findAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Tous les utilisateurs</span>\n<span class=\"token function\">print_r</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$users</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// Un seul utilisateur, celui avec l'id 1</span>\n<span class=\"token comment\">//print_r($users->add(\"toto\"));   // Ajoute l'utilisateur \"toto\" et affiche l'id correspondant à cette nouvelle entrée</span>\n<span class=\"token comment\">//print_r($users->edit(\"aa\", 1)); // Modifie l'utilisateur avec l'id 1 (et affiche 1 pour signaler une vraie modification)</span>\n<span class=\"token comment\">//print_r($users->delete(1));     // Supprime l'utilsateur avec l'id 1 (et affiche 1)</span></span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Pour afficher les \"stdClass Object\" proprement.</p>\n<div class=\"gridsome-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token function\">header</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'Content-Type: text/html; charset=UTF-8'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">require_once</span> <span class=\"token double-quoted-string string\">\"models/Users.php\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$users</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Users</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$rows</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$users</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">findAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">empty</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$rows</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token delimiter important\">?></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>table</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tr</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>th</span><span class=\"token punctuation\">></span></span>Id<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>th</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>th</span><span class=\"token punctuation\">></span></span>Name<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>th</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tr</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$rows</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$user</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token delimiter important\">?></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tr</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">></span></span><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?=</span> <span class=\"token variable\">$user</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">id</span><span class=\"token punctuation\">;</span> <span class=\"token delimiter important\">?></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">></span></span><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?=</span> <span class=\"token variable\">$user</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">name</span><span class=\"token punctuation\">;</span> <span class=\"token delimiter important\">?></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tr</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> <span class=\"token keyword\">endforeach</span><span class=\"token punctuation\">;</span> <span class=\"token delimiter important\">?></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>table</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span> <span class=\"token delimiter important\">?></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>Pas d'utilisateurs dans la BDD :(<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n<span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> <span class=\"token keyword\">endif</span><span class=\"token punctuation\">;</span> <span class=\"token delimiter important\">?></span></span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>Conclusion</h2>\n<p>En mettant en place une classe Database, on gagne du temps dans le développement et sur la lisibilité du code. En effet, on instancie seulement une fois la connexion à PDO puis on écrit les requêtes dans le modèle concerné.</p>\n","download":"","tags":[{"title":"PHP","path":"/tag/PHP/"},{"title":"MySQL","path":"/tag/MySQL/"}],"parts":[]}},"context":{}}