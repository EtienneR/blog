{"hash":"b89929ffb278454bd1f8bb0277abaa50df9b43f7","data":{"post":{"title":"API JSON Web Token Authentication (JWT) sur Express.js","date":"27 August 2019","content":"<p>Ce tutoriel a pour but de vous montrer comment utiliser JWT. Pour des raisons pratiques, il n'y aura pas de connexion à une base de données quelconques et cela afin d'avoir un guide court et concis sur le sujet principal.</p>\n<p>Vient le moment dans votre développement qui nécessite une authentification de la part de l'utilisateur. Pour ce faire soit vous passez par une API d'un service comme Google, Facebook, Twitter, etc... ou bien vous gérez vous même. Rien de bien compliquer à mettre en place. Pour ce faire, l'utilisateur doit pouvoir s'enregistrer puis se connecter. Il faut donc passer par un système sécurisé. Mais comment faire me direz-vous. Avec un jeton ou token en anglais. Le principe repose sur le fait de vérifier qu'un utilisateur existe. Si c'est le cas, un token lui est fournit. C'est via ce dernier que le serveur d'API autorise l'accès à certaines routes.</p>\n<h2>Explications rapides du JWT</h2>\n<p>Un JWT est donc un token. Il est composé de 3 parties séparées par un point :</p>\n<ul>\n<li>Le <strong>header</strong> ;</li>\n<li>Le <strong>payload</strong> ;</li>\n<li>La <strong>signature</strong>.</li>\n</ul>\n<p>Le <strong>header</strong> détermine le type de token : JWT et l'algorithme de chiffrement <strong>HS256</strong> (HMAC avec du SHA-256) ou <strong>RS256</strong> (signature RSA avec du SHA-256).</p>\n<div class=\"gridsome-highlight\" data-language=\"json\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-json line-numbers\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"alg\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"HS256\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"typ\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"JWT\"</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Le <strong>payload</strong> concerne la partie informations de l'utilisateur comme son id, son nom d'utilisateur, etc...<br>\nQuant à <strong>signature</strong>, c'est la partie la plus complexe car elle prend en compte un mot secret.</p>\n<p>Il existe un debugger en ligne <a href=\"https://jwt.io\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://jwt.io</a> (ou sur <a href=\"https://oauth.tools\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://oauth.tools</a>).</p>\n<p>Dans notre API, l'utilisateur devra posséder un token pour accéder aux routes protégées. Pour se connecter, il devra saisir ses identifiants (login et mot de passe) sur une route de type POST. Cette dernière retournera un jeton, le fameux JWT. Celui-ci devra être renseigné dans le header de la requête pour accéder aux routes protégées.</p>\n<h2>Préparatifs</h2>\n<p>Dans un nouveau dossier que vous nommez \"api\", initialisez votre projet avec la commande <code class=\"language-text\">npm init -y</code>. Puis installez les modules <code class=\"language-text\">npm i express jsonwebtoken cors</code> et <code class=\"language-text\">npm i -D morgan</code>.</p>\n<ul>\n<li><strong>express</strong> (version XX) : le framework HTTP ;</li>\n<li><strong>jsonwebtoken</strong> (version XX) : générer un JWT ;</li>\n<li><strong>cors</strong> (version XX) : activer le CORS ;</li>\n<li><strong>morgan</strong> (version XX) : avoir des logs dans le terminal.</li>\n</ul>\n<div class=\"gridsome-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token comment\">// Chargement des modules</span>\n<span class=\"token keyword\">const</span> express <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'express'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> morgan <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'morgan'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> jwt <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'jsonwebtoken'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> cors <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'cors'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token constant\">PORT</span> <span class=\"token operator\">=</span> <span class=\"token number\">1234</span>\n<span class=\"token keyword\">const</span> <span class=\"token constant\">SECRET</span> <span class=\"token operator\">=</span> <span class=\"token string\">'mykey'</span>\n\n<span class=\"token comment\">// Initialisation de Express 4</span>\n<span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token function\">express</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token function\">cors</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>                                 <span class=\"token comment\">// Activation de CORS</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token function\">morgan</span><span class=\"token punctuation\">(</span><span class=\"token string\">'tiny'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>                         <span class=\"token comment\">// Activation de Morgan</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>express<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>                         <span class=\"token comment\">// Activation du raw (json)</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>express<span class=\"token punctuation\">.</span><span class=\"token function\">urlencoded</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> extended<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// Activation de x-wwww-form-urlencoded</span>\n\n<span class=\"token comment\">// Liste des utilisateurs</span>\n<span class=\"token keyword\">const</span> users <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span> id<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> username<span class=\"token operator\">:</span> <span class=\"token string\">'admin'</span><span class=\"token punctuation\">,</span> password<span class=\"token operator\">:</span> <span class=\"token string\">'password123'</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\">/* Ici les futures routes */</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'*'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token number\">404</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> message<span class=\"token operator\">:</span> <span class=\"token string\">'Page not found'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token constant\">PORT</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Server is running on port </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token constant\">PORT</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">.</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Le serveur est prêt sauf qu'il manque les routes...</p>\n<p>Remarque : dans l'idéal, c'est mieux de stocker la valeur <code class=\"language-text\">SECRET</code> dans un fichier de configuration.</p>\n<h2>Obtention du token</h2>\n<p>Dans la route <code class=\"language-text\">/login</code>, on invite l'utilisateur à se connecter avec son login et son mot de passe.</p>\n<div class=\"gridsome-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token comment\">/* Formulaire de connexion */</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/login'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Pas d'information à traiter</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>req<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>username <span class=\"token operator\">||</span> <span class=\"token operator\">!</span>req<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>password<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token number\">400</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> message<span class=\"token operator\">:</span> <span class=\"token string\">'Error. Please enter the correct username and password'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// Checking</span>\n    <span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> users<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">u</span> <span class=\"token operator\">=></span> u<span class=\"token punctuation\">.</span>username <span class=\"token operator\">===</span> req<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>username <span class=\"token operator\">&amp;&amp;</span> u<span class=\"token punctuation\">.</span>password <span class=\"token operator\">===</span> req<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>password<span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\">// Pas bon</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>user<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token number\">400</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> message<span class=\"token operator\">:</span> <span class=\"token string\">'Error. Wrong login or password'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">const</span> token <span class=\"token operator\">=</span> jwt<span class=\"token punctuation\">.</span><span class=\"token function\">sign</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        id<span class=\"token operator\">:</span> user<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span>\n        username<span class=\"token operator\">:</span> user<span class=\"token punctuation\">.</span>username\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">SECRET</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> expiresIn<span class=\"token operator\">:</span> <span class=\"token string\">'3 hours'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> access_token<span class=\"token operator\">:</span> token <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Lancez le serveur avec la commande <code class=\"language-text\">node index.js</code> (pensez à redémarrer votre serveur lors de la modification de ce dernier).</p>\n<p>Dans un premier temps, on vérifie que l'utilisateur a bien saisi les 2 champs obligatoires. Si ce n'est pas le cas, on retourne une erreur 400 l'invitant à les saisir.</p>\n<div class=\"gridsome-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\"><span class=\"token function\">curl</span> -X POST <span class=\"token punctuation\">\\</span>\n  http://localhost:1234/login</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p><img class=\"g-image g-image--lazy g-image--loading\" src=\"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 1366 741' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-8ccb78dde18c0df42244c34551cbc385'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-8ccb78dde18c0df42244c34551cbc385)' width='1366' height='741' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAAjCAIAAACra5t9AAAACXBIWXMAAAsSAAALEgHS3X78AAAG%2bUlEQVRYw%2b1YS28btxae39Bd/0KCPBDUsSU5lmO9bMd2bEeKXcu2irjdXFygQBdd3t1dB7ebri8uiqLtqo9FN0XbVbtNgbaB4ziSH5JGo3kPORyORrofh7ISJ43tFLHTAvlMczgcknM%2bnnN4zkiZGEuMXxuZSCdRp8cSY9cS6WuJ6%2bnUs2X8xAWLFPITqyu3y28XS4uz6bHkn1vn%2bvgfdEK86cnMQnHh/fmJcjah3JidXFicnZ4pzC/MzNzI31qcuTk3mcmM5bLpfsnFJZvO58ZPUgr5uC5MzM1OomDNE058tjzvpYX89cJk5mY%2bPZMbUxaup4rTubncePFGIZedmJ4uFArZZDIxOpqUJZWSjVQqlThJGR4eGhm5OoLr8NDVq2%2bhxmrJ5Ag6E4lhNE64Dkr8djH3qZIaTaJOoE4llc7dD5t3suZaams5MZsansjl89lsIpHIZrPTU1Ojo6OZTGZ%2bfj6VTF24cOHikbh06dK5c%2bcWFhampqbGY2QmMqghO9ijf3FxcXJy8th1Ll64eP78%2baGhoWKxeOXKFQiDNmqsg11JxygVS/lc/vLly8qX//rgs3%2buffGPlf%2b9t1RZWS5X3llbXy8tLZfX1tYqlaXlpeW3l9fX128vLc2fAHNzc5VKpby6uhyjXEZzFXKXSqU7G3fWK%2bsr5ZVjF8H4W7du4Y0bGxul27exTrGEqwDWQWulXN549931SgUjlebujtpsqqqqqS3SbpFWk2gqbbe8VsPDLSEeIa7nUUr9k8GLgYmE0vhCMBPTXdeVD45dod1uPwKq1e3tbVz39vYgXjNGvV5v63ptZwcSb25uYlmlZ9X8dt1Vm06zbjbqVrPR3tsx1UbHsSJ1J%2bABBgVB0DtDgGqtVtvd3YXoaGiaZtu2FcM0TewI%2bGAM6HW7XcVxbMO2zbg42GnGsNse9YMwZIwFrwKc884Bwk6HBSELuCych%2bL/AKChVB9VwXV/f79Wq4Im5vSf88H18YQzA48BLlEE5YeDEnVEJ0hiDFQBY1P82EBji6UwUcdx3Bhoox7cOmcOGIRP3V%2b2yX%2b/sz/53vn0R%2beTH5xakzCfuF4fuq4r9%2b7dgzG1Wi34B/RQrVbv378P/0C9tbW1%2beDBr7/9BkPEAPVsUW%2bozNP%2b/bn%2b5p3GlQ%2bab6zuvbFa//pnc7/2YOvhI4hqGLphGAr%2b7cMwDwCncSzbNEz4jtBB/PTwJvV77FOAadmMOj/97t79yv74W/ejb%2bz/fONs7lPiWnhkx6YhNCDPRxgcPcDjW0JtGFcA5wkt10MvnFoa22BkEPf03Z2/fEQR70W0x%2bxeh/ZCr8MIZyxkPk4YnxJBQL4ePiGdQYoF3xcHMqEmjvUw6Ji6sf2Aac0A08QwcbpL6SVVTI%2biKDwFAtg75tiBporaaHPX4ZRw4oWU%2bF6sARgAvAFDZQO6AwNuW54l9OSKTuKodbe%2b6zT2QQDDIDo4CwNzHIguTAjFMlSTmV7U63VfMrDiMwXAq/smhO2UGhCb7nk%2bCzqCnwynYqcRHAgLKBOHl4xrIBw/JLIHDVikeB69sHhQHc7uo%2bR/omBwzOgJAriHH%2bNmEAgPaP8BBv2DBqRvNBoH07svtP2QRmYHALapd/zkCP6HSNA1Wj2rHRJPN0wFq8Aejt6DIwBvwaLRE9NPnjLIV7PYr54VIHrajnpSCeDd47wXRztdN4QGniYANUWRVJbcpyMgTUg68Z8Ai88vVFEnGthJbCiRJBE3I2k86IKHyQJCXBDQFd00/dg1pU3Da03XsXyCs8YWzin6Axm%2bn5O3hPh77vNjAOYiRTPMHc/ccrSHTnvb1W3q2Ya555oNiGDZbdvactsejk6tyferfG872H3IDY26jtAA3XkYCh36ce4RiCaqkEuJ5AEv1BUJazmNtEcyYTzwDwpyLx7vTRDKk5TLTgwNRRCg3Q6SIhEJhAb2dncQlrENiN7IjdCFnKGltmAYMr9ANusR6mzdx0ncN8RXChBBaoNkDcREKqHFAAGRU4hY4BqmiTY2xcLZbuhIUYWfaQ3u0wMCTzrroUb39AF3xS7LQ18QgPtBMzB34Y8eQZKKIBzwjkdh3ZHPEB9CfByQIKIsJJRRxj0S%2bAwBOHAJI5QTGng0ELceE3NOH9gpKT32XWE8dBl3PbcDU2tpZHcfloVQpsORKbc9pmqe5bC2QVwSmLZvu0xHgkGCtkk1g2gGNR0fDbVNNJN2oui0NTAgIPNOBS/sRF1E2%2b6rNu4XApwbsV8QOBxp%2b8HicPR93DGIJ085c/8EP1sOUAX0oPT%2btgABHLavCbwm8JrA3xMyIAgCg8RQfAr/9dBPMWPI9uCTUH7ZKvI3DAQFZESc8%2bCvBPmljpShGf/8DDnxnYsGcqHB76T/B3kB4NujnqS2AAAAAElFTkSuQmCC' /%3e%3c/svg%3e\" width=\"1366\" alt=\"Postman 400 : Pas d'information à traiter\" data-srcset=\"/assets/static/api_jwt_login_empty.82a2fbd.210d7d654e75d2437742c58c47b2e2a1.png 480w, /assets/static/api_jwt_login_empty.cbab2cf.210d7d654e75d2437742c58c47b2e2a1.png 1024w, /assets/static/api_jwt_login_empty.4833fd8.210d7d654e75d2437742c58c47b2e2a1.png 1366w\" data-sizes=\"(max-width: 1366px) 100vw, 1366px\" data-src=\"/assets/static/api_jwt_login_empty.4833fd8.210d7d654e75d2437742c58c47b2e2a1.png\"><noscript><img class=\"g-image g-image--lazy g-image--loaded\" src=\"/assets/static/api_jwt_login_empty.4833fd8.210d7d654e75d2437742c58c47b2e2a1.png\" width=\"1366\" alt=\"Postman 400 : Pas d'information à traiter\"></noscript></p>\n<p>Puis dans un second temps, on vérifie dans le tableau des utilisateurs que le nom et le mot de passe correspondent via la fonction <code class=\"language-text\">find</code>. Si ce n'est pas le cas, alors une erreur 400 informe l'utilisateur sur l'échec de son authenfication.</p>\n<div class=\"gridsome-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\"><span class=\"token function\">curl</span> -X POST <span class=\"token punctuation\">\\</span>\n  <span class=\"token string\">'http://localhost:1234/login'</span> <span class=\"token punctuation\">\\</span>\n  -H <span class=\"token string\">'Content-Type: application/x-www-form-urlencoded'</span> <span class=\"token punctuation\">\\</span>\n  -d <span class=\"token string\">'username=admin&amp;password=123'</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n<p><img class=\"g-image g-image--lazy g-image--loading\" src=\"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 1366 741' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-3e99fbe8a38caf6a0cc9911f90343dc1'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-3e99fbe8a38caf6a0cc9911f90343dc1)' width='1366' height='741' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAAjCAIAAACra5t9AAAACXBIWXMAAAsSAAALEgHS3X78AAAG7klEQVRYw9VYSXMbRRSe35AbfyGp4JDCsWUZeZMseY0tr/EiVznFBQ4UHLhx5JyCC2eKSlHACZwDFwicIMdAEYLj2JZlLaNlRrP0qGfT8E23NFZMKrYUxyZftds9Pd1v3uu3toThgb7BSIj3g5G%2bSCQ0EAkNDYZfpoFCIj68vrK4emt%2bITk1OND3kgSPER9PRGfn5z6YGVmNhYSJqcTM3PTYZHxmdnJicnQuOXlzOhGNRmKxgWdaFP3gadro6BB6CDA1lZieSkxOjDbmWYu1144%2b2ro3PjoUT4zcjEcmYxEhORSeH49NRwfnJ%2bKx6PD4eDwej/X19fb39/EWDoeCwWlaT093b%2b%2bNXvzv6b7R8zZ6UEPDZCjUg8Ep6fDvoufbWxvm0YfQh/sE587H%2bc2ovN6/sxSaCvcMx0ZHo9FQKBSNRsfHxvr73xkZGZmZmQmHw1evXn3zhejq6rp8%2bfLs7OzY2NggA/aiB%2b/YjvlkMplIJE6kA1y5cqW7u3t%2bfv769etgBmP0oINTGWDAq1gsdu3aNeH7Tz785v31795b%2berdxY1by6upjfVUamFpeWVtfS21sbS0tLy8nEqlFhcXZ06B6enpjY3U6urqMsMqA/heWFjY3NwEnZWVlROJJJOzc3NJfPH27dvYCDpgd5FhgQFE8ArUQFkoZNJioSCKhZIoknKRFAukVDDKIinmdTwSouu6pmmGYdROB52BMPCBwQAi/NWJFMrl8h7D7u4u%2bsPDQxH8MeRyObxNp9MYb29vg6zgVdO1ck4TC2ohJ%2bezVTFXzmYq2SyVy/VixjRNLELvnSMgKljMZDJgHYNSqaQoSpVBlmWcCOTBGohXr9cFVVVkpdFUXTco1Q1DN2rUskxKzYuAZVlOE7bjUNOmpsWbZdn%2bXxMQQ9jf24es2Ww2nd6HmNiDNf5Lf53F/h9tODdYDJDFdaF8O2iu409CSKyBKmBOAmwORsItFQaqqqrGwE0/eFTPHTCImqH9sUu%2b/Em5e1/9%2blf17i9qukBojTScSdcrlYrw8OFDGFOxWIR/QA/7%2b/uPHz%2bGf6Df2dnZfvLkr0ePYIhYAE8/T%2bTyItVLn35beWMz/9ZHhUtrh5fWclu/y9n0k52ne2BVkiqSJAn4U56F3AScRq0qsiTDd6ADnR/L8XPyEQzOEHJVoYb629/anR%2bUL37UPr%2bnfHZP3c4aRKvilcJMw9cAj48wOKOJo0diKDAuE85jK5pehG/bFmUmFwAruRE2vO%2bs4bqW5xoeVTyHeLbuUGJRatOaTWnNIL4AsH6KKduuNTnDAL7vB2RiyAjrtunIlerejph9aqgSly0I58zVTAxc1w2c7wyBs6OqYpZEv5fKlqZaBrGIbhukpjMNQPvgBkv5ALqDBJZS1WFAigrnJTpRxZyWyxi5jMVsCOxCZqyEEsF0w5aqkihTWXc9r37GAMX/NACfbmgAwAM/fiTPGjUdX75GOvU1QymhJho0w60FArdu5CEL7223bfZcH86L%2bGeND7CUSdQiAJ7hrwj/QSJsiv0cBPPBANwjqze319s6fnCDvVkGHJN38mYXwR6ZoC4VvWrZJnpFkoUHDx7wAoYYhMvXFqAKyM9rjQ7OnqdbpgT39NvqtuU5vsP5Grh//2ecIk9Y7QoApsE6nAFidGDbHZxXvcU8Gia0tbXFUxpk6IAiT%2bleR57batAdiNAQAP8QUtEfd5zjAj8fDgu4YKWDqhOUefWGmObW3Ya3shjTdF4v4IdvOGpHTux52A8%2bmgGBmaN7WvAohN5tH/goPs3zSbsUwCESkC9AuVjEftgPD4sI/JKmyjWCLMYDPCZPrH47rpzBt1/ry9VDXd5TK3taJa1JSP8oJPJ6VTRUTVEqqpLWJR1mUila%2bQMrmzYP9y25bGgqiiGhdvDUoX5m4lkUR0JxEXDsgK1GOY3S/NWgKYpVs0zeLJbRMYOGJ3BAGROOSbEa3MLzXKY9v5zGzSd9cIBQmM/ncffBVAGjXJ5ffHBV8K8/hCj//EkVuWGIFwpIgosmCgIIBe351ahfb6JuQGmAW6xhoEJQVAXCowKFdnWUH9CJItsmPZbsLgTwHHBL2W0RMiAKuSgdUMv4/qgTS9UcYpiWoxOo0jGoTWqWbpga6j/T9geEqrBHajWz0AUAJwgDgRhgWUB9o5tgW3VgamLJyBzScgXsVRSqEUtWaVEyJJWKFYJHSfEf0SzbvVhD4oHHF8CPnvU6NFK/aONuzxP8e4h/GxGOpZYgTdRbJ7yWPkg2Fw2cPNxAOFZdvi7g3nwkwGsI5OLXWQBe%2bPgCBFmdFyT/N/CCgDLwcXAl5Ddbgf%2bGgcsA0vDLVDWv6DdGxEqk2oL/87MIPlH5Y4AaLvid9F8dW9xnNVvU0AAAAABJRU5ErkJggg==' /%3e%3c/svg%3e\" width=\"1366\" alt=\"Postman 400 : Mauvais identifiants\" data-srcset=\"/assets/static/api_jwt_login_bad.82a2fbd.aaa08eeec28841e676dde7b9f1bcf11d.png 480w, /assets/static/api_jwt_login_bad.cbab2cf.aaa08eeec28841e676dde7b9f1bcf11d.png 1024w, /assets/static/api_jwt_login_bad.4833fd8.aaa08eeec28841e676dde7b9f1bcf11d.png 1366w\" data-sizes=\"(max-width: 1366px) 100vw, 1366px\" data-src=\"/assets/static/api_jwt_login_bad.4833fd8.aaa08eeec28841e676dde7b9f1bcf11d.png\"><noscript><img class=\"g-image g-image--lazy g-image--loaded\" src=\"/assets/static/api_jwt_login_bad.4833fd8.aaa08eeec28841e676dde7b9f1bcf11d.png\" width=\"1366\" alt=\"Postman 400 : Mauvais identifiants\"></noscript></p>\n<p>En revanche, si c'est le cas, alors le token est donné à l'utilisateur final qui pourra l'utiliser pour se connecter sur les routes nécésitant d'une authentification.</p>\n<div class=\"gridsome-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\"><span class=\"token function\">curl</span> -X POST <span class=\"token punctuation\">\\</span>\n  <span class=\"token string\">'http://localhost:1234/login'</span> <span class=\"token punctuation\">\\</span>\n  -H <span class=\"token string\">'Content-Type: application/x-www-form-urlencoded'</span> <span class=\"token punctuation\">\\</span>\n  -d <span class=\"token string\">'username=admin&amp;password=password123'</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n<p><img class=\"g-image g-image--lazy g-image--loading\" src=\"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 1366 741' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-5d2f909c66a81688d6ee58c5a69289b8'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-5d2f909c66a81688d6ee58c5a69289b8)' width='1366' height='741' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAAjCAIAAACra5t9AAAACXBIWXMAAAsSAAALEgHS3X78AAAHsUlEQVRYw9VYzW9bxxF/f0N7yr9gw7FhVJZICpIskSJlfUSWZEk2JbGw3EtRoEAOvfXYa4v2knMQBEGLXBLnkEvd9tT6ZjRo6kqyJFIi3%2bPX%2b9i3%2b74f2d/u8kOWHUu0FccZrEbz9s3sm9mZ2ZmlMjmenBhLSDwxlhwbS4yPJW5OpN5kYIVcdnIjv5q/u3JnaX5iPPmGC55a/FYuvbiy/OvFqXw6oczO5xaXFmbmsou352Znp5eX5j5YyE2lxzKZ8edGGnjiPGN6%2biYwDJifzy3M5%2bZmpzvzYmQGG/2PnpTNTt/M5qY%2byI7PZcaVpZuplZnMQnpiZTabSU/eupXNZtPJZGJ0NClHKpXoEecZw8NDIyM3RvB/eOjGjZ8BY7VkcgSTicQwiHOuI78LDJFTA/PACeBUUol%2b/xvtftrYHN1bT8ynhicz09OZdCKRyKTTt2ZmRkdHp6amFhcXU8nUlStX3n8lXL169dKlS7dv356ZmZkQMDk5BTwyMpxKpTC/tLSUy%2bXOXAfvL1%2b%2bPDQ0tLKycv36dSgDGhh7gF0ZF4BXmUzm2rVryhe//fDPv9r8/Jf3PvnFWuHe%2bkbh55tbW6tr6/nNzc1CYX197e7d9a2trbW1tcVzwMLCQqFQ2NjYuAux9fV8Pg8aet%2b5c2d7%2b36hsJXP3ztzEfAvLy/ji9vb26urq1gH4qsCJIFlHzx4gA%2bBU1GPSlVNq1artWqNNWqsprF61eGESoEFUEodx3HPB1QApCAixTEJ2rZtOX/mCo1G4%2bDg4PDwcH9/H8Tx8THU0wRUKpVms1kqlTCzu7uLZZW2WXQbFbuqEa1iqGVTUxvHJaOqRsSMqyU/8MHk%2b377LQJMLRaLR0dHUB1EvV63LMsUYBgGtgDagwfmtVothRDLwAvLMixCsNOeh92mjuuHoed5/g8BQRBEXQijyPNDzw/kCIKQ/3UBZijwFGwtl8vF4iHM5DIcOKNkOinw1iAQAFviGM4PeyOO%2bCSMBA9cgWBTZIDKkEWMEkJsAaCBe4/krYNlEdex/73PPv6r9enfyGf/IJ/%2bnRQ15rnMph1APihPnjxBMNVqNeQH/ACHPH36dGdnB3hvb29nd/c/336LQAQDz/S3CBW16tH67/7SfO9%2b5fqH2k83j3%2byUXn4L6Nc3N17dgBVdb2p67qCP%2bt5MLqApCGmZegGcgc%2boHJbTu8Thx5xgWCYlueQf/7X/sOX1kdf23/6yvrjV2Sn7DCbv7JEaHAPyPMRAed0of/IHAvB5SN5QsumNTyHgSdCrgfgBD8TJ5UfXDzEcdCOnbZntSOnHdLIY4HnQQmcMK7DOgbgtEFOuF3NQCD3XaGXgWM99COjaR7sVcv7DtGlbYg/eWaLVPNBxHHcS74LBOydRyy/XuVYbwQ2CRwWMBo6zKXCA4QfnhSskoDvYEFgmdQyuZsIYZSRasWuHDmV44DwSagLm8EJJ0LpTiyZetXwdBq3260LBqz4wgDg09wAWSzxILcfVdf1/Aj2MVE2ZR31POb5GPCMrGsw%2bKSgOBJsH8d3PLB6cB3O7lfpf2KAWZrUNwCPyFcs0SuEXbNfAr35HgHtUeFPiA%2bmOmTLArBN5xCOkWyoBC291jYbIaNN3VAeP34sGxhsZ8e%2bQQCugP2y13i9vQfEAs4ZTxBrhUE74gnHPfDo0SPsoixYgxoApaE6ZIEHUaJvwGtnRT%2bEHj58KEsa9Hg9A/QuDOoH%2bbmBI6/76Y4BoWjagE8nzmmDXw4yiWUOvJrzpRkluzco0M1OPvr29ImWFOiPfhK325CX50DchT51FsgCAhwPDvgoPi3rz3lXiPoaogBxAxq1GpZA/MhjEQe/bhPDxTHqyAMek2d2v2/SOctuFxmoN5saNQ%2bpThyGbkGlpuYQ27KaxCpSnaL6NmqBWgrKRb98GBgNxyZohhSv9CzyeGWSVRRb4gW%2bF4U9tTrtdKfN/h77Zx5LwKKP55pIWm6QUCLyvdD3oS1OoVh4j7fTuPkUSyUchaqq4u6DKU1VtYoqLz64KvDrD2PW/77xLKMTiD8owBJcNC1iwSh0A7wbRb8pG0AoimGiL7BtXMYwI3tVOIjpTXQ80J2HnzxDeM60ZO5JQr6S891z5vnR6hOn37a%2bg35uksshc9AmI%2bxldChBGLleaFomv70xJ0ZFDPwYNSE4eQ9udbEYrfgF4qUNizxF4lfM9GhOtF7kab8oK161ESDYXMSeAtuCjo2R39Tr%2b%2bXSM7X0zTNN1euGU20y4LruaA0KQqtTzDRNVzddTFZqtoqZBsMAw5FKmmBugo01DLehc/Fqgx5Xba1GMQm2So1CEJNg4IJNhlfFCmkYDmRLmi0/gUesfHhs1XSnWLYqdSp0YJbt4xUG7uywBE5QcHp5UQwPxCK4g7hF3cgJWo4HfwRUDpdj3AYI9UHAY8A2CygT2OGToC3qM84WgM0W/HK%2bhwnz%2bQpCCoO5oYOlIGhjBU6Lt754xRlM4oGHr8aklO/6EbDjRsSmCCTuAVkWOt1Yq9ervuuAfJAHlzJY7bxQttcTaZ2wYWAD3jUn/IgNkI0PN6BX1WVL865Bp0ILkHTvSihvtkqnhNk2yvCbdDXf02%2bMaMZw3mvi52foic4fNNqF3u%2bk/wewV89dWfN%2bwwAAAABJRU5ErkJggg==' /%3e%3c/svg%3e\" width=\"1366\" alt=\"Postman 400 : Identification réussi\" data-srcset=\"/assets/static/api_jwt_login_good.82a2fbd.822b99b13864b8f8ab74fd1131136ea0.png 480w, /assets/static/api_jwt_login_good.cbab2cf.822b99b13864b8f8ab74fd1131136ea0.png 1024w, /assets/static/api_jwt_login_good.4833fd8.822b99b13864b8f8ab74fd1131136ea0.png 1366w\" data-sizes=\"(max-width: 1366px) 100vw, 1366px\" data-src=\"/assets/static/api_jwt_login_good.4833fd8.822b99b13864b8f8ab74fd1131136ea0.png\"><noscript><img class=\"g-image g-image--lazy g-image--loaded\" src=\"/assets/static/api_jwt_login_good.4833fd8.822b99b13864b8f8ab74fd1131136ea0.png\" width=\"1366\" alt=\"Postman 400 : Identification réussi\"></noscript></p>\n<h2>Middleware d'authentification</h2>\n<p>On va mettre en place un middleware pour chaque page protégée. Pour ce faire, on vérifie la présence du token dans le header de la requête ainsi que sa véracité.</p>\n<div class=\"gridsome-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token comment\">/* Récupération du header bearer */</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">extractBearerToken</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">headerValue</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> headerValue <span class=\"token operator\">!==</span> <span class=\"token string\">'string'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">const</span> matches <span class=\"token operator\">=</span> headerValue<span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token regex\">/(bearer)\\s+(\\S+)/i</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> matches <span class=\"token operator\">&amp;&amp;</span> matches<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/* Vérification du token */</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">checkTokenMiddleware</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">,</span> next</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Récupération du token</span>\n    <span class=\"token keyword\">const</span> token <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span>headers<span class=\"token punctuation\">.</span>authorization <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">extractBearerToken</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">.</span>headers<span class=\"token punctuation\">.</span>authorization<span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\">// Présence d'un token</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>token<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token number\">401</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> message<span class=\"token operator\">:</span> <span class=\"token string\">'Error. Need a token'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// Véracité du token</span>\n    jwt<span class=\"token punctuation\">.</span><span class=\"token function\">verify</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">,</span> <span class=\"token constant\">SECRET</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">err<span class=\"token punctuation\">,</span> decodedToken</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            res<span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token number\">401</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> message<span class=\"token operator\">:</span> <span class=\"token string\">'Error. Bad token'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>Page protégée</h2>\n<p>Ainsi, on peut insérer facilement ce middleware pour gérér l'authentification des pages protégées par ce dernier.</p>\n<div class=\"gridsome-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\">app<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/me'</span><span class=\"token punctuation\">,</span> checkTokenMiddleware<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Récupération du token</span>\n    <span class=\"token keyword\">const</span> token <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span>headers<span class=\"token punctuation\">.</span>authorization <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">extractBearerToken</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">.</span>headers<span class=\"token punctuation\">.</span>authorization<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">// Décodage du token</span>\n    <span class=\"token keyword\">const</span> decoded <span class=\"token operator\">=</span> jwt<span class=\"token punctuation\">.</span><span class=\"token function\">decode</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> complete<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> content<span class=\"token operator\">:</span> decoded <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>1ers tests avec Postman</h2>\n<h3>Pas de token</h3>\n<div class=\"gridsome-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\"><span class=\"token function\">curl</span> -X GET <span class=\"token punctuation\">\\</span>\n  http://localhost:1234/me</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p><img class=\"g-image g-image--lazy g-image--loading\" src=\"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 1366 741' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-35700710cdd1ca5db79cf53a3e03931b'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-35700710cdd1ca5db79cf53a3e03931b)' width='1366' height='741' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAAjCAIAAACra5t9AAAACXBIWXMAAAsSAAALEgHS3X78AAAGgklEQVRYw91YSW9bVRR%2bv6E7/kKrtFVEmthOEyfxlLGZk8ZOjJKyQYgFC5YsWVaCDWuEKgSsgC7YIGAFaxQJ0TZ27Hge3jzcN5rvvms7SYfEgZCBLyfXx9fn3nfOvWeyubGRQPj%2b0PhoMHw/MDoSGMF4PxAeDY351GUY3yNhk3hsPLWxmny4vLI4OzoSDJ9leZfGwq/ffCoRWVhe/GB%2bPBkJcNOzifnF2cmZ%2bPzCzPR0bGlx5sFcIjIxEo2MtinqE2XCvVAsRsdEfGx2Nj43m5iZjrXne1t%2bjN7w0HhsLJ6YeBAbmYmOcItjoeXJ6FwkvDwdj0bGp6bi8XgkGAwMDwcZhUKMCYVCgV5ocHBgaOjeEF4HB%2b7dexsjdgsGhzAZCAyC6XEfkP90uvYlwjzGAMZQkHMef1Tejgibwy/WA7OhwfFoLBaJBAKBSCQyNTk5PDw8MTExPz8fCob6%2bvpun4g7d%2b7cvHlzYWFhcnIy7GNifAIjdIf1mF9cXEwkEqfuc7vv9q1btwYGBpaXl/v7%2b6EMeIzYB6cy6gMfRaPRu3fvct99/OHX729%2b%2b97Gl%2b%2bupTfWk%2bl3UltbK%2bvrG5ubqXR6bX1t/eH61tbW6trafA%2bYm5tLp9PJVAqrgGQqmUymoPfKysr2zvZWemsjuXHqJpBfWlrCE3d2dlZWV7HP8gpeKbAPuI1kcufRo610GpJc%2bSBfrVSq1Wq9VtPqVa1WAekNMGW1UdM0TdU0RVV1XTd6g%2boDCzVd9180rMRyRVHYB6fu0Gg0ssD%2bfiaTwWuhUIB6FR%2blUqnRbObyeWj87NlzbMvVpJparyjVklwpiZUyXy6CLFl2FNGt5k3LhBAxzdYFAqbmc7mDgwOonsvt1%2bt1SZJEH4Ig4ERgD2Rgnud5XFOReXwgSSBZ1XRCVN0glmXaNiHQ/BJgWZbTge04xLSJaTGyLJv%2bdwAzuNz%2bfuHgoFgs5nI5mIk1banOyGBfIPA4ZgYG18Xl211yHTqJTyGGq4CzcboP32P1rvu2nbjDqJcBhIxpqH9ktC9%2bkp78LH/1q/zkFzlX0YihKR2ZZrPJ7e7usihBfBR9sNDZ29vDnWT9aIKhPM8LF4tGU/BM8ZNvmm9tl/s/rNxIFW6kSj/8LhRzz1/sZaEnzzehFQdRWZalDl7iFfxJkqLIuCOcSTuTHDsnhY3nDklWLEP97U/18ffS5z8qnz2VPn0qPyvqmiIKIlUOMvQGdD%2bvweG6vnT4VtMlTJgIHltUFIOGkcmcjTkYJE1/5jDcrXOG61otV28RqeXoLVt1iGYRYhEDGcbQNWoAtMDjEROGn61Zvmdv8V4kmmabjtDkM89Jo2JiGZ0%2b1J6ZCnnXdVn8nS9wdkSWzHoVI%2bEbliJbumZpqq1rhurfAKqVomkQhcPAGeA5zAbGK3RSk6slpXQgl4swAGKGbzOyMngoTb0OJPI1gfCq22p55wzs%2bAoBeDQ1wJAE3T/yrgtBOdgDLTWVnbSOKZUQjZhMjAkwL2J3BQZxQj93T6pQ52pUx4DzLaLwIZjX8UTqY8QH409ee/R0TxLxfOoaAN9F8WIjg%2btT78BGR3lWho6W1Vfr61G4PsB4rttyPa%2bjD167vN0RbROkPA97UgPqtSqOBw7N%2bjZZlJqyJBDNQAryofkRYp2lEXh9OL4BNOXzfEkT8wqflRs5hRc1VRKEsiJWdZnqI4n7Kq8i8zRqVilnFbJmYd8SGroiN5s8RwpZmxik82B66ZZJ7HYfwTSi5%2bp6tvOfwE81futlWwZ6R8rancmO8dCHipoOIQ4xPNv2HBveSW8gm83k8zkcQ7lcrtVqjXqtXCqVS2XW9KElrJQrSFPiX7tEElkkti4VsGcvk0EVA0MrMVKgKNJ2FZUNfQbtRv2i69gWbYIUGUmIHoIsOCbxzj9Hnhm4CWjPEiY1ABGI9CfJEk0gTYE0mqYkYUaQkO0tUSZgdMOqCwgKy3WdqwDcAwyA9ghdzrQdhViwCbpZgkiqdUuSTduVVUSDLSmmIKNPcJoC4sRpXRmwSkoN8Dopybts5z4TcA9tFzpWOrzDMuH5891a7l09%2b5Cs6BeaI0XwmgEGIPlwrWsLVGh4Pncdz/5VA7zX9VQ90j9Y8u/pmAGt/8cNnHqcl3LSJylzvW%2bAli9mQLetZV%2bFrxraDbIPxqOJYE07%2b2bLsaYfrUS9Xj9L239BvzHiCzfKbcX/%2bRl64ps6GHTR3d9J/wYlhutjwXjcgwAAAABJRU5ErkJggg==' /%3e%3c/svg%3e\" width=\"1366\" alt=\"Postman 401 : Pas de token\" data-srcset=\"/assets/static/api_jwt_me_empty.82a2fbd.f58dd432900d4bde00c6cdc5b103d0e8.png 480w, /assets/static/api_jwt_me_empty.cbab2cf.f58dd432900d4bde00c6cdc5b103d0e8.png 1024w, /assets/static/api_jwt_me_empty.4833fd8.f58dd432900d4bde00c6cdc5b103d0e8.png 1366w\" data-sizes=\"(max-width: 1366px) 100vw, 1366px\" data-src=\"/assets/static/api_jwt_me_empty.4833fd8.f58dd432900d4bde00c6cdc5b103d0e8.png\"><noscript><img class=\"g-image g-image--lazy g-image--loaded\" src=\"/assets/static/api_jwt_me_empty.4833fd8.f58dd432900d4bde00c6cdc5b103d0e8.png\" width=\"1366\" alt=\"Postman 401 : Pas de token\"></noscript></p>\n<h3>Le token n'est pas bon</h3>\n<div class=\"gridsome-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\"><span class=\"token function\">curl</span> -X GET <span class=\"token punctuation\">\\</span>\n  http://localhost:1234/me <span class=\"token punctuation\">\\</span>\n  -H <span class=\"token string\">'Authorization: Bearer fake_token'</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<p>[ Postman 401 : Le token n'est pas bon ]</p>\n<h3>Le token est bon</h3>\n<div class=\"gridsome-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\"><span class=\"token function\">curl</span> -X GET <span class=\"token punctuation\">\\</span>\n  http://localhost:1234/me <span class=\"token punctuation\">\\</span>\n  -H <span class=\"token string\">'Authorization: Bearer ici_le_token_valide_obtenu_lors_du_login'</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<p><img class=\"g-image g-image--lazy g-image--loading\" src=\"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 1366 741' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-5ad1192a92889c4121037460376a9a2c'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-5ad1192a92889c4121037460376a9a2c)' width='1366' height='741' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAAjCAIAAACra5t9AAAACXBIWXMAAAsSAAALEgHS3X78AAAG9UlEQVRYw81YS29bVRC%2bv6E7/kKr0ioiTWxHzst2nDRJ845b54GaskGIBQuW7FgXsWGNUIVArEorsUHAChYgpKoSSUNsx4nf9n2c%2b/C5T/Ode2zjpEnjpE2aT5OTued1Z%2bbMzJlrYSQcHAoHRgZZOxQOhsOBwXBgeCj0OoQd4mMjK8ml5N2FxbmpocHga254aPOJeGR2YfbjmeFkNCDcnorPzE%2bPT47NzE5O3o7Nz03emY5HIuFodPAARdAOdUOx2DBaKDA1FZ%2beimPPZr9P0dPR/y/tXDsWGx6Lj96JhSejYWFuOLQwEZ2ODC3cHotGRiYmxsbGIsFgYGAgyCkUCrSZbqivr7e//1Y//vf13up7Dy12Cwb70RkI9IHpch/%2bXrRYcojQjzaANhQUnIefFjci0srAv4nAVKhvJBqLRSKBQCAaiUyMjw8MDIyOjs7MzISCoevXr7/7Sty4cePq1auzs7Pj4%2bNDPkZGRtH29/eFQiH0z83NxePxE/fB%2bLVr13p7excWFnp6eiAMeLSwAawy6AND0Wjs5s2bwuPPPvnuo9UfPrz3zQfL6/cSyfX3V9fWlhKJ5Orq6vp6IrF8925ibW1teXl5pgtMT0%2bvr6%2bvrKxgFZBMJsFD7sXFxY2N%2bxhKJu%2bduAnmz8/P440bGxtLS5AlgeVLPjiDbR88eIDdMFMo7GVLxWKpVKqUy3qlpJeLIIMxBa1a1n1ommYYRr07aD6wCkv4cnSCV1WV95%2b4Q7VaTafTmUwmlUqByeVy5XK56AuZz%2bdrtVo2mwW/vb2NbYWyUtYqRbWUJ8W8XCyIhRzIIsRRZbeUNS0Tk0zTbFwgoCpE3Nvb29/f393drVQqhBDFhyRJMAGkxxyo53meIBIiyrKEMUUhmm5Qqhl1almmbVNKzbcBy7KcFmzHoaZNTYuTZdnsrwWoIexmMvt7ezgm6KrIMlvjz7Jb8zoXXBgsH9DFdXH4dptch3VCSczBUcDZBKMD8FHuqe0WZ8eZiwchKq1rz1L61z8rj34h3/5GHv1Kdos6retaC4gH4fnz5zxKCoUCQgTnsLW1hfjY3Nzc2dnZ9oEAKh8DOGibebMoliqWXv38%2b9o79ws9nxSvrO5fWcn/%2bIeUz27vpNIQVfQhICx4iHQGCiCjHw%2byLIti5yg5iM6hNwtJVqhBfv9HffhY%2beon9csnyhdPyHbO0DU2pBB2SuwEeH6Ew7UdiT06jmpQRdWISQ3XxSgcDp6HsO50OR7lPE1Z5wO8vOEaDao0HKNhaw7VLUptWkeGqRs6UwCSQQ7EbjsGkMBtosi7O9WdF7VcRq/kLENHTFAf/FpoZ3S8Q/OHzkkB07IpUcxKibVizVIJhLF0zTb0uuafAITgbgCBkFaRhvHn1fUGkRqa0lBlj0iebbN%2bH50Ju93jnRWHtjpu0ssEIDkyBXD6kJ67geu6R685HlhyYOEp4efKZuJ/xSs81/FsixF4h/ENz0WuZQpgBkIW6w9awj1Ix9oPmiMh2P4RnRaQDKkPORA3LvY58hwwB0EJp/fEslcreWBUBUzD0GzTrCELPX36FM7DUxJ86bQOAPshUWEhEh8MAZPwtlarimINF02NPzRRwR9/FxgYvhsXao6%2b5EI2dyHkeIQBzyfY8Qw%2bgCBulwAd7YHHzqqE9wA49o5s457Wdk0FWDT4689WeEEI6H8ouLsEVkExXqueQYCmAljM76vWrSXCo3CzIp9yN%2b1GuJcT1Dmi9aKmAkhG3AZtY7Bk77ft0opVeH57JF4xdCJOVeGhzPQJDKo6B37JFKiWSpCVZ1IdFxaqa43IlkGNOq8RcCCt2vAc62e8q1qp5FVpR60RQ1dECXzBUIisVBUpq4kabt9q0cpnrL0UI7FqqKRWEwWaTeFua4cY9cONdoQaOwr2QF/H0t0A7uo6jDp4x3/ijeM0x11/mN0/rJxO7%2bKLICOJItI5LyqRmMHD8EhQ%2bCxCq%2bq6svmMKlKnC74twJgvXryAa4BBK6CoASlEYX5vWSDDjwQMIySaBQ%2b%2bzgzdZkn27FXDmwK3PZcNQiKInbppE5W4jk1FqV6uWERlnzy4sRtNgdtJ2r0c4BUAzA%2bvFiCpalo8Y9qI4lRGLZZllXiOixsPNchZb4gLSKceDM0U0KCAb1300kpFy%2b7L6bQsiXmRbGWrumG1Lu/LJT2imimAFEOoyU%2bAHU2%2bYGRzZU3%2bs5D%2bq5D6u5A2W3XeZQMPBsF0bJyA5z8gWF18zWi65TrENDSLqmbdu6zS80QPF7J1lo9kp7uq4TI4Dw9iFD4siDt7OXvU10/j8saAf%2b2y6hfZ37584PUA/xznPoOKh1cf/kcAFfhvGKg9cQefa8Fz5hoJBTL/ZRdy4tsDDGo4%2bA//nfQ/hQ7dAFRhReoAAAAASUVORK5CYII=' /%3e%3c/svg%3e\" width=\"1366\" alt=\"Postman 200 : Le token est bon\" data-srcset=\"/assets/static/api_jwt_me_good.82a2fbd.22de0b8cd1c18ca3845ff3b9778b5e8a.png 480w, /assets/static/api_jwt_me_good.cbab2cf.22de0b8cd1c18ca3845ff3b9778b5e8a.png 1024w, /assets/static/api_jwt_me_good.4833fd8.22de0b8cd1c18ca3845ff3b9778b5e8a.png 1366w\" data-sizes=\"(max-width: 1366px) 100vw, 1366px\" data-src=\"/assets/static/api_jwt_me_good.4833fd8.22de0b8cd1c18ca3845ff3b9778b5e8a.png\"><noscript><img class=\"g-image g-image--lazy g-image--loaded\" src=\"/assets/static/api_jwt_me_good.4833fd8.22de0b8cd1c18ca3845ff3b9778b5e8a.png\" width=\"1366\" alt=\"Postman 200 : Le token est bon\"></noscript></p>\n<h2>Page d'enregistrement</h2>\n<p>On ne va pas se contenter d'une route de login, on veut également mettre en place une route d'inscription.</p>\n<div class=\"gridsome-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\">app<span class=\"token punctuation\">.</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/register'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Aucune information à traiter</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>req<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>username <span class=\"token operator\">||</span> <span class=\"token operator\">!</span>req<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>password<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token number\">400</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> message<span class=\"token operator\">:</span> <span class=\"token string\">'Error. Please enter username and password'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// Checking</span>\n    <span class=\"token keyword\">const</span> userExisting <span class=\"token operator\">=</span> users<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">u</span> <span class=\"token operator\">=></span> u<span class=\"token punctuation\">.</span>username <span class=\"token operator\">===</span> req<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>username<span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\">// Pas bon</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>userExisting<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token number\">400</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> message<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Error. User </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>req<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>username<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> already existing</span><span class=\"token template-punctuation string\">`</span></span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// Données du nouvel utilisateur</span>\n    <span class=\"token keyword\">const</span> id <span class=\"token operator\">=</span> users<span class=\"token punctuation\">[</span>users<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>id <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n    <span class=\"token keyword\">const</span> newUser <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        id<span class=\"token operator\">:</span> id<span class=\"token punctuation\">,</span>\n        username<span class=\"token operator\">:</span> req<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>username<span class=\"token punctuation\">,</span>\n        password<span class=\"token operator\">:</span> req<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>password\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// Insertion dans le tableau des utilisateurs</span>\n    users<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>newUser<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token number\">201</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> message<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">User </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>id<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> created</span><span class=\"token template-punctuation string\">`</span></span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3>Pas d'informations à traiter</h3>\n<p>Dans un premier temps, on vérifie que l'utilisateur a bien saisi les 2 champs obligatoires. Si ce n'est pas le cas, on retourne une erreur 400 l'invitant à les saisir.</p>\n<div class=\"gridsome-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\"><span class=\"token function\">curl</span> -X POST <span class=\"token punctuation\">\\</span>\n  http://localhost:1234/register</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p><img class=\"g-image g-image--lazy g-image--loading\" src=\"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 1366 741' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-ccdaf2017eb668dcd875dad8061cb184'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-ccdaf2017eb668dcd875dad8061cb184)' width='1366' height='741' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAAjCAIAAACra5t9AAAACXBIWXMAAAsSAAALEgHS3X78AAAG0ElEQVRYw9VYyW8bVRifvwFO/AutSquINLEdOU5iO3ZSp1mcpXUSo6ZcEBJSDxw5cqwEF84IVQjEBeiBCwJOcKRcQGR1HO%2befXuzefi9efbUbdMkTdO0%2benl5Zs3b/n294258Xg0EY%2bMj9I%2bEY/G45HReGQsEXuZhh0yk%2bOrhaXCrfzifC4xGj3tViOHbj6VSc7l5z%2benSgkI9x0Lju7MJO9kZmdy01PpxfmczdnssnkaCqVeKIlE0%2bPPKel02PoIUAul5nJZW5Mp7vjqbF06qSbHLJtHz2ZHpvMTNycjN9Ixbn5sVg%2bm5pJJvLT6XRyfGpqcnIyGY1GRkairMVikZA4SRsaGhwevj6M/0OD16%2b/hz4aHUbDYCQyBOKE%2b7Bz0bPl/Q3j6CPoY1HOvf9J/U5SXIttrURysaHxFMRIRiKRVDI5lc2OjIxMTEzMzs7GorErV668eySuXr166dKlubm5bDabCDA%2bPoEevMdiMYzPz89nMplj98H7y5cvDw4O5vP5gYEBMAMaPfaBVkYD5POLqVT62rVr3A%2bf3vv2o7XvP7z99QfLxdsrq8X319bXl5ZXCmtra8XiysryrVsr6%2bvry8vLsyfAzMxMsVhcXV1dCVAoFECD78XFxY2NO8XieqFw%2b9hNMH9hYQEnbmxsLC0tYR8sXwrACGx79%2b5dHISZXL2836jXG41Gs9HU2029WddbDbPdNJp1DY8BNE0zDMM8GbQAWIUlbDkGQauqysaP3aHdbu/u7u7t7e3s7IA4ODgAe/UA1WqV5/n9/X2MbG5uYlvOl0pmu6o26kq9KtYqUr3KVw9aB2WI0WmWLcvCJPT%2bOQKilkqlcrkM1kulvVarJcuyFEAURagA3GMOxOt0OpyiyKLcbQo0TYhmmKpumODaItbrgG3bbg%2bO6xLLIZbNmm079K8HiMHBUpC1UqlAVojpOphhOY7TnduDc47AcUwMdJ4H4zth81w6iLeYBlPA2TjmoMxlQ/dlfUiEr84TCBnL1P7e0b/6RX7wq/LN78qD35RSXSemrvbmIB64R4/%2bgjPBzxAflQAsdLa3t%2bGIsA%2bIra0tTBDPF21e7FjSZ9/x79ypDdyrv7168NZq9ac/xUppc2t7F3wKAi8IAoc/uQ8KYqKPhh6UIID0QCcskzypJ7X35owhK6ptan/8o93/Uf7yZ/WLh/LnD5X/KoauSqJEmcMcagGWH%2bFwRgCW5rqPuiFjAKFsO5KqmTSMrG5%2bNHS20ApGCCGPA/BM4Xm27xk%2bkX3X8B3NJbpNiENMhxDT0JkA9HjEBAsGxhZinyZk3RCR1h3LFXlhZ5O06xaW0Wnd7M4YxhIs9zyPxd/ZArojimy1GuiJ0LZVxTZ0W9ccQze1wALUTzQNUxkBz4EEtixp8BtYUVF0TVcaVbVaVmoVCIBpYB0y4z1oME29Dk0SmiIRNM/3O2cM7PhMA3B014WgTjww3cPXTWK5pk6p8B4lRCeWQSw2jSmepSk2AgIeifeu98LswXTI90fxHzRGYHIgUZ8AeEYc4yG8CHtiH4JwPCTAfa1W6y3vvJD6wQ2rDgCoyT9%2bsYfIc227IzR9qe3oGi%2bIHHaBPxytgyOAhZChf/nJSwZ2NAni6lgGmNr8QG7ftv0g4HheoBZ4WgCYyfOYsZiejgBzIRbEp0DAPyKLeK7nh97y%2bOyA9DzmPBhEhLEGgWwqAM/xomgGocl8GlEraopEdOQamQYnHbfY9f2cuiW8/E8BrKUlmiDua%2bKW0tpW2rsqLxuaLIhVVayBBUluy9Km0tKQOlt1u7Jnl3es8o4ttAxVoRYw9rcdakOTMUFJdD2OWIKnLHod5NZXUfkwSYhtmb0GlbBiyHJYJrXZIKYGN4DRcVEU0ZuAWuAgqOSgBtSoqI0w1MS3QbMJx0CP8EIRoemGsvUvMnHXEV8rIAhqHFop2TYtJVoBIIAgCqx4EGglIkApqCFQb6CQoHHWqtmm/lQK6s9a5waEK7TMPn2oAAg/WAbu7gUVKppL3cnVdHi3ZxLc0I5pORrxiO3qhqVqxDBtTbfQ64aNRxvZ/3wBrTHuoXcO56sEfKjIr2azpZcPCC%2bAV15CJWHLmtVoaZJC2gKKWIsXzUZbFyQTBC8azYB2T3F7vQRCAVA0wFU4HA4GDNPovG7nfiEguHH3UwF6lUVwj/Yy8ZMu/nggfN/xX388wxSwQyhA5xniTQcEQLI9VAD/Igrg93F/wSzQz/0R7dgJ59koM4e60IUU4EKCXQhUgLAwpJ/Cbx5YUck%2bG1iFGX4Ssi9bjv2CgksBFdGpq%2bJX9xsjqjOUDPXg52fwia92EKiFwt9J/wc2XObDv9FSHQAAAABJRU5ErkJggg==' /%3e%3c/svg%3e\" width=\"1366\" alt=\"Postman 400 : Pas d'information à traiter\" data-srcset=\"/assets/static/api_jwt_register_empty.82a2fbd.607859326671f0ccab00db2b6f29698e.png 480w, /assets/static/api_jwt_register_empty.cbab2cf.607859326671f0ccab00db2b6f29698e.png 1024w, /assets/static/api_jwt_register_empty.4833fd8.607859326671f0ccab00db2b6f29698e.png 1366w\" data-sizes=\"(max-width: 1366px) 100vw, 1366px\" data-src=\"/assets/static/api_jwt_register_empty.4833fd8.607859326671f0ccab00db2b6f29698e.png\"><noscript><img class=\"g-image g-image--lazy g-image--loaded\" src=\"/assets/static/api_jwt_register_empty.4833fd8.607859326671f0ccab00db2b6f29698e.png\" width=\"1366\" alt=\"Postman 400 : Pas d'information à traiter\"></noscript></p>\n<h3>Mauvais identifiants</h3>\n<p>Puis dans un second temps, on vérifie dans le tableau des utilisateurs si le nom d'utilisateur correspond via la fonction <code class=\"language-text\">find</code>. Si c'est le cas, alors une erreur 400 informe l'utilisateur sur l'échec de son inscription.</p>\n<div class=\"gridsome-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\"><span class=\"token function\">curl</span> -X POST <span class=\"token punctuation\">\\</span>\n  http://localhost:1234/register <span class=\"token punctuation\">\\</span>\n  -H <span class=\"token string\">'Content-Type: application/x-www-form-urlencoded'</span> <span class=\"token punctuation\">\\</span>\n  -d <span class=\"token string\">'username=admin&amp;password=admin123'</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n<p><img class=\"g-image g-image--lazy g-image--loading\" src=\"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 1366 741' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-8c900f66b6da10cbe31c36fb60621952'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-8c900f66b6da10cbe31c36fb60621952)' width='1366' height='741' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAAjCAIAAACra5t9AAAACXBIWXMAAAsSAAALEgHS3X78AAAG8klEQVRYw9VYy08bRxjfvyG3/guJ0kSoBGxTIMTY5hlsMFAIIBH10h6q9tBbrz1Gai89V1VUtT215NBLk/bU5ha1h6qUlzF%2b2/uYndmdfdn97Y6xXYgCJgSSnz6G8Xjm2%2b%2bb77mWRoZCw4P9I0NhjMODocHB0NBg6PZw5GUIHBLxkZWl%2beX35tKpqeGh8EsyPMJ8YiyaTKc%2bmhlZHg1JE1OJ5OzU%2bER8Jjk5MRGbTU3enU5Eo4Ojo0P/oyjG4dNQLOaPUGBqKjE9lZiciDXXAxrtjtoP7Twbj92OJ%2b7cjQ9Njg5KyduR9NjodHR4biIei46Mj8fj8Wg4HBoYCAuKRMQkEomETkN9fb39/bf68b%2bv91bfOxjBLRzux2Io1IfJKfmAgqf7Z48Q1jGGMEbCkvvg0%2bJ6VFkZ2FoMTQ30jYzGYtFoKBSKRqPjY2MDA%2b/euXNnZmYG4l%2b/fv3tF%2bLGjRtXr15NJpNjY2PDAXAWI2THcaynUqlEInEiH%2bDatWu9vb1zc3M9PT0QBnOM4INbGQqAr2Kx2M2bN6UfP/v4uw9Xfvhg6Zv3F9aWFpfX1u6trqYXFpdXVlbW1hYWFhYXF1dXV%2bfn52dOgenp6bW11eXl5cUAywEgdzqdXl9fB5%2blpaUTmaRSydnZFJ54//59HAQfiDsfIB0ATPAVuIGzVMxmSsViqVSslEqsWmblIqsUjWqZlgu0WmKMUUp1XTcMwzwdaAAWQEyMAGAivjqRQ7Va3Q2ws7OD8eDgoAT5AuTzeXybyWQw39zcBFupoWbMal4vFUkxrxTzajFfyx9UDrKsUqqXs5ZlYRPGxgUCqu7v72ezWYgOWSuViqZpagBFUXAj0Ad7oF69XpcI0RRVUzSfCKUG59QwdWaYkNri1mXAtm33EI7rcsvhli3Ith3/7xBQQ9rb24OuuVwuk9mDmq6DHZbjOM29h3AuEHicUAOD58H4Tos811/Et9gGU8CdJPgcnER4ast9jzsxvXAgZCyT/rnDvv5Fe/iEfPsbefgryRQZN5l%2buKdWq0nPnj2DM8HPEB%2b5ACJ0tre34X%2bwDyZbW1vYICsK6MJQrSl1S/38%2b9pb64WeT4pX7h1cuZff%2bEPJZf7d2t6FnLJck2VZwp/WAYKY6JjjHkgQQLCFSRnV9WP3pLcm5wuN6LZJf/%2bbPvhJ%2b%2bpn/ctH2hePyGbOYLqKoIVw2ONbQORHOJxIdnCY9kdmaFhAKNuOptOyQQ3HNg1TeJfYD3cUTtgOwHOF59kNz2hwreEaDYe6nNmcO9x0ODcN5isAUTiWHEfIIfRB7PsJmRkK0rpjuUpN3d0q5bYNIgvdWulcBBwmnueJ%2bDtf4O440axKCSOXq7ZOcIU2o47BTBpYwPcTSrFVTOA50MDWVAq/gRUJYZSRUl7PZ4181ia%2b7SAudMZOGBFCkwCaKpcVrlCv0aifM8DxGAF4dNMCAD40XQhXyy3X16%2bZiXzLcM64BYJlhLdA4c6DIgbwveN1LR5Mh3z/IvkDEhNsDjTqUACfEfJg0SqEh2o/B6311gTSo6p3HO9OdJwVqQ/XdIrDHiIPlaAulxtq1WG0JivS06dPRQOD6xT6dQWYAvqLXuNsdw94AU7pTzhWd%2bwGirRt%2bxZ48vgxbpEEWalbBSA0FEAwICTO4NtnuK96h3s0XWhjY0OUNOhwBgVw96LHwi10a4ROhz6DCk0F8E%2bk0aOBc1Th50PkX4hyhq4TnEXxgABe3WtGa5Bj2vnnUB5xoE3tIG40cF7kAe8Q7dlJCLKQidHrHngoHi3qSbccICEKkK9AtVzGefiPSItI/LJOFJOhiokEj8UTu98zd86Q2%2b/1FfWAKrukuqtXM1RG%2bUeLX6BqySC6ptWIikWK6lsr24V9O5excnu2UjV0gmZIMve3Xe5XJlFFcSXctrjrtMRq9tKI%2blfZPFtoUmxLkB0scr%2btF8XYNgMhXOyyLEhbh7lc3/P9djqTzWb29xGFhUIBLSeWipjlC%2bLFB68K/usPY9o/f3FNaTripQKaoFtGQyASoN%2bNoktWNdVvDfACYBia3wlqTtBcwLroR23H4qrsWvx4FF48EDnIe7h%2b4R3IQh5aB00nfjxSZhMdUWnZrs5gStdE52e5ROcM7QVaJILQsCizdMop4%2b4lAXcHB4EaEFlCf0MtB12bC1crVVg2x2syt11Zhay2SjioXEVkcUKtQpkqmilrZlUxFMIv0ZFE4vEV8LNnvc4tXr9s5%2b4uEnDdQTMvHXHqVpmotxYa7QLTWUkuXV1RB5sKvAbydC09gqGtwJsI1OM3WAHR%2bPgKtKq6aEheN4g6zQOIeeuVULzZSuIXFLwMoAy/TFfzin5jRK5EqS36Pz%2bXICc6f0zQw7V%2bJ/0PpeXg9erfQw8AAAAASUVORK5CYII=' /%3e%3c/svg%3e\" width=\"1366\" alt=\"Postman 400 : Mauvais identifiants\" data-srcset=\"/assets/static/api_jwt_register_bad.82a2fbd.0b5106bd71920f367d0083b804008515.png 480w, /assets/static/api_jwt_register_bad.cbab2cf.0b5106bd71920f367d0083b804008515.png 1024w, /assets/static/api_jwt_register_bad.4833fd8.0b5106bd71920f367d0083b804008515.png 1366w\" data-sizes=\"(max-width: 1366px) 100vw, 1366px\" data-src=\"/assets/static/api_jwt_register_bad.4833fd8.0b5106bd71920f367d0083b804008515.png\"><noscript><img class=\"g-image g-image--lazy g-image--loaded\" src=\"/assets/static/api_jwt_register_bad.4833fd8.0b5106bd71920f367d0083b804008515.png\" width=\"1366\" alt=\"Postman 400 : Mauvais identifiants\"></noscript></p>\n<h3>Enregistrement réussi</h3>\n<p>Dans le cas contraire, on ajoute la nouvelle ligne dans le tableau des utilisateurs via la fonction <code class=\"language-text\">filter</code> et on renvoie une 201.</p>\n<div class=\"gridsome-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\"><span class=\"token function\">curl</span> -X POST <span class=\"token punctuation\">\\</span>\n  http://localhost:1234/register <span class=\"token punctuation\">\\</span>\n  -H <span class=\"token string\">'Content-Type: application/x-www-form-urlencoded'</span> <span class=\"token punctuation\">\\</span>\n  -d <span class=\"token string\">'username=toto&amp;password=xoxo'</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n<p><img class=\"g-image g-image--lazy g-image--loading\" src=\"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 1366 741' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-8c900f66b6da10cbe31c36fb60621952'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-8c900f66b6da10cbe31c36fb60621952)' width='1366' height='741' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAAjCAIAAACra5t9AAAACXBIWXMAAAsSAAALEgHS3X78AAAG8klEQVRYw9VYy08bRxjfvyG3/guJ0kSoBGxTIMTY5hlsMFAIIBH10h6q9tBbrz1Gai89V1VUtT215NBLk/bU5ha1h6qUlzF%2b2/uYndmdfdn97Y6xXYgCJgSSnz6G8Xjm2%2b%2bb77mWRoZCw4P9I0NhjMODocHB0NBg6PZw5GUIHBLxkZWl%2beX35tKpqeGh8EsyPMJ8YiyaTKc%2bmhlZHg1JE1OJ5OzU%2bER8Jjk5MRGbTU3enU5Eo4Ojo0P/oyjG4dNQLOaPUGBqKjE9lZiciDXXAxrtjtoP7Twbj92OJ%2b7cjQ9Njg5KyduR9NjodHR4biIei46Mj8fj8Wg4HBoYCAuKRMQkEomETkN9fb39/bf68b%2bv91bfOxjBLRzux2Io1IfJKfmAgqf7Z48Q1jGGMEbCkvvg0%2bJ6VFkZ2FoMTQ30jYzGYtFoKBSKRqPjY2MDA%2b/euXNnZmYG4l%2b/fv3tF%2bLGjRtXr15NJpNjY2PDAXAWI2THcaynUqlEInEiH%2bDatWu9vb1zc3M9PT0QBnOM4INbGQqAr2Kx2M2bN6UfP/v4uw9Xfvhg6Zv3F9aWFpfX1u6trqYXFpdXVlbW1hYWFhYXF1dXV%2bfn52dOgenp6bW11eXl5cUAywEgdzqdXl9fB5%2blpaUTmaRSydnZFJ54//59HAQfiDsfIB0ATPAVuIGzVMxmSsViqVSslEqsWmblIqsUjWqZlgu0WmKMUUp1XTcMwzwdaAAWQEyMAGAivjqRQ7Va3Q2ws7OD8eDgoAT5AuTzeXybyWQw39zcBFupoWbMal4vFUkxrxTzajFfyx9UDrKsUqqXs5ZlYRPGxgUCqu7v72ezWYgOWSuViqZpagBFUXAj0Ad7oF69XpcI0RRVUzSfCKUG59QwdWaYkNri1mXAtm33EI7rcsvhli3Ith3/7xBQQ9rb24OuuVwuk9mDmq6DHZbjOM29h3AuEHicUAOD58H4Tos811/Et9gGU8CdJPgcnER4ast9jzsxvXAgZCyT/rnDvv5Fe/iEfPsbefgryRQZN5l%2buKdWq0nPnj2DM8HPEB%2b5ACJ0tre34X%2bwDyZbW1vYICsK6MJQrSl1S/38%2b9pb64WeT4pX7h1cuZff%2bEPJZf7d2t6FnLJck2VZwp/WAYKY6JjjHkgQQLCFSRnV9WP3pLcm5wuN6LZJf/%2bbPvhJ%2b%2bpn/ctH2hePyGbOYLqKoIVw2ONbQORHOJxIdnCY9kdmaFhAKNuOptOyQQ3HNg1TeJfYD3cUTtgOwHOF59kNz2hwreEaDYe6nNmcO9x0ODcN5isAUTiWHEfIIfRB7PsJmRkK0rpjuUpN3d0q5bYNIgvdWulcBBwmnueJ%2bDtf4O440axKCSOXq7ZOcIU2o47BTBpYwPcTSrFVTOA50MDWVAq/gRUJYZSRUl7PZ4181ia%2b7SAudMZOGBFCkwCaKpcVrlCv0aifM8DxGAF4dNMCAD40XQhXyy3X16%2bZiXzLcM64BYJlhLdA4c6DIgbwveN1LR5Mh3z/IvkDEhNsDjTqUACfEfJg0SqEh2o/B6311gTSo6p3HO9OdJwVqQ/XdIrDHiIPlaAulxtq1WG0JivS06dPRQOD6xT6dQWYAvqLXuNsdw94AU7pTzhWd%2bwGirRt%2bxZ48vgxbpEEWalbBSA0FEAwICTO4NtnuK96h3s0XWhjY0OUNOhwBgVw96LHwi10a4ROhz6DCk0F8E%2bk0aOBc1Th50PkX4hyhq4TnEXxgABe3WtGa5Bj2vnnUB5xoE3tIG40cF7kAe8Q7dlJCLKQidHrHngoHi3qSbccICEKkK9AtVzGefiPSItI/LJOFJOhiokEj8UTu98zd86Q2%2b/1FfWAKrukuqtXM1RG%2bUeLX6BqySC6ptWIikWK6lsr24V9O5excnu2UjV0gmZIMve3Xe5XJlFFcSXctrjrtMRq9tKI%2blfZPFtoUmxLkB0scr%2btF8XYNgMhXOyyLEhbh7lc3/P9djqTzWb29xGFhUIBLSeWipjlC%2bLFB68K/usPY9o/f3FNaTripQKaoFtGQyASoN%2bNoktWNdVvDfACYBia3wlqTtBcwLroR23H4qrsWvx4FF48EDnIe7h%2b4R3IQh5aB00nfjxSZhMdUWnZrs5gStdE52e5ROcM7QVaJILQsCizdMop4%2b4lAXcHB4EaEFlCf0MtB12bC1crVVg2x2syt11Zhay2SjioXEVkcUKtQpkqmilrZlUxFMIv0ZFE4vEV8LNnvc4tXr9s5%2b4uEnDdQTMvHXHqVpmotxYa7QLTWUkuXV1RB5sKvAbydC09gqGtwJsI1OM3WAHR%2bPgKtKq6aEheN4g6zQOIeeuVULzZSuIXFLwMoAy/TFfzin5jRK5EqS36Pz%2bXICc6f0zQw7V%2bJ/0PpeXg9erfQw8AAAAASUVORK5CYII=' /%3e%3c/svg%3e\" width=\"1366\" alt=\"Postman 201 : Identification réussie\" data-srcset=\"/assets/static/api_jwt_register_bad.82a2fbd.0b5106bd71920f367d0083b804008515.png 480w, /assets/static/api_jwt_register_bad.cbab2cf.0b5106bd71920f367d0083b804008515.png 1024w, /assets/static/api_jwt_register_bad.4833fd8.0b5106bd71920f367d0083b804008515.png 1366w\" data-sizes=\"(max-width: 1366px) 100vw, 1366px\" data-src=\"/assets/static/api_jwt_register_bad.4833fd8.0b5106bd71920f367d0083b804008515.png\"><noscript><img class=\"g-image g-image--lazy g-image--loaded\" src=\"/assets/static/api_jwt_register_bad.4833fd8.0b5106bd71920f367d0083b804008515.png\" width=\"1366\" alt=\"Postman 201 : Identification réussie\"></noscript></p>\n<h2>Conclusion</h2>\n<p>Il y a encore pas mal de choses à faire pour mettre cette API comme chiffer le mot de passe en Bcrypt, stocker les données de l'utilisateur dans une base de données, envoyer un email de confirmation lors de l'inscription d'un nouvel utilisateur, stocker les logs de connexion, etc...</p>\n","download":"","tags":[{"title":"API","path":"/tag/API/"}],"timeToRead":6,"parts":[{"title":"API JSON Web Token Authentication (JWT) sur Express.js","href":""},{"title":"Authentification avec JWT sur Nuxt.js","href":"authentification-avec-jwt-sur-nuxt-js"}]}},"context":{}}